var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.848,1,1.764]],["body/modules/AppModule.html",[0,1.164,1,3.133,2,1.049,3,1.049,4,1.266,5,1.266,6,1.266,7,1.266,8,1.266,9,2.041,10,2.041,11,2.959,12,0.034,13,2.959,14,1.851,15,1.266,16,1.266,17,0.191,18,0.158,19,0.158,20,2.455,21,2.049,22,0.435,23,2.983,24,0.616,25,2.455,26,1.768,27,2.455,28,0.464,29,1.768,30,1.15,31,0.677,32,0.616,33,2.455,34,2.455,35,1.987,36,1.564,37,2.455,38,2.455,39,1.527,40,2.455,41,2.455,42,2.455,43,4.962,44,3.574,45,2.455,46,2.455,47,2.455,48,2.455,49,2.455,50,2.041,51,2.455,52,3.588,53,2.455,54,2.455,55,4.962,56,2.455,57,2.455,58,2.455,59,2.455,60,2.455,61,2.455,62,2.455,63,0.335,64,2.041,65,2.455,66,2.455,67,2.455,68,2.455,69,2.455,70,1.049,71,2.455,72,2.455,73,2.455,74,2.455,75,2.455,76,2.455,77,2.455,78,2.455,79,2.455,80,2.455,81,2.455,82,2.455,83,2.455,84,2.455,85,0.191,86,0.171,87,0.013,88,0.019,89,0.013]],["title/modules/AuthModule.html",[0,0.848,11,1.764]],["body/modules/AuthModule.html",[0,1.372,2,1.424,3,1.424,4,1.719,5,1.719,6,1.719,7,2.578,8,2.578,11,3.329,12,0.034,14,2.292,15,1.719,16,1.719,17,0.259,18,0.215,19,0.215,21,1.903,22,0.444,24,0.836,29,2.401,30,1.562,31,0.839,32,0.836,35,1.562,36,2.124,85,0.259,86,0.232,87,0.018,88,0.024,89,0.018,90,2.771,91,2.771,92,2.771,93,3.173,94,3.333,95,2.831,96,3.333,97,2.771,98,2.771]],["title/classes/AuthResolver.html",[86,0.215,95,1.968]],["body/classes/AuthResolver.html",[12,0.034,17,0.243,18,0.202,19,0.202,22,0.436,24,0.786,28,0.592,31,0.805,32,0.786,63,0.582,85,0.243,86,0.218,87,0.017,88,0.023,89,0.017,93,2.894,95,2.716,97,2.605,99,0.717,100,2.605,101,0.48,102,1.821,103,3.544,104,1.616,105,3.134,106,0.805,107,3.134,108,1.821,109,1.821,110,1.17,111,3.134,112,2.894,113,0.86,114,2.605,115,3.134,116,1.339,117,2.199,118,2.605,119,3.544,120,3.544,121,2.605,122,2.199,123,2.605,124,1.789,125,2.605,126,2.605,127,1.997,128,1.789,129,3.134,130,1.468,131,3.134]],["title/injectables/AuthService.html",[93,1.593,132,1.206]],["body/injectables/AuthService.html",[12,0.035,17,0.173,18,0.143,19,0.143,22,0.388,24,0.557,28,0.419,30,1.041,31,0.839,32,0.557,39,0.727,63,0.546,70,1.423,85,0.173,86,0.155,87,0.012,88,0.018,89,0.012,93,1.718,101,0.34,102,1.423,103,3.323,104,1.718,106,0.755,108,1.423,109,1.423,110,0.914,112,2.291,116,0.949,117,1.718,122,1.146,123,1.846,128,1.268,130,1.041,132,1.301,133,1.268,134,1.846,135,0.999,136,3.033,137,3.323,138,2.283,139,1.846,140,2.831,141,3.693,142,3.331,143,2.77,144,2.221,145,2.221,146,3.331,147,2.77,148,2.221,149,2.399,150,3.331,151,3.998,152,1.6,153,1.041,154,1.846,155,2.221,156,2.221,157,2.221,158,1.561,159,1.415,160,3.331,161,3.428,162,2.831,163,2.23,164,2.831,165,2.024,166,2.123,167,1.902,168,1.846,169,1.846,170,1.415,171,3.331,172,2.221,173,1.415,174,1.846]],["title/classes/CoreEntity.html",[86,0.215,175,1.764]],["body/classes/CoreEntity.html",[12,0.034,17,0.236,18,0.196,19,0.196,22,0.371,28,0.574,63,0.701,85,0.236,86,0.291,87,0.016,88,0.022,89,0.016,99,0.696,101,0.466,106,0.97,113,1.41,135,1.253,153,1.426,170,3.04,175,2.724,176,2.53,177,3.04,178,3.436,179,3.436,180,4.238,181,2.192,182,3.043,183,2.192,184,3.043,185,1.863,186,2.192,187,3.043,188,2.192,189,3.043,190,2.522,191,1.253,192,5.135,193,4.178,194,2.192,195,4.178,196,4.178,197,3.043,198,4.178,199,3.043,200,3.043]],["title/classes/CoreOutput.html",[86,0.215,201,1.104]],["body/classes/CoreOutput.html",[12,0.034,17,0.285,18,0.237,19,0.237,22,0.285,28,0.693,39,1.549,63,0.646,85,0.285,86,0.255,87,0.02,88,0.025,89,0.02,99,0.84,101,0.561,106,0.893,110,1.299,113,1.299,135,1.419,163,2.454,165,2.045,185,2.045,190,2.454,191,1.419,201,1.691,202,3.05,203,2.217,204,2.022,205,3.668,206,2.991,207,3.668]],["title/classes/CreateUserInput.html",[86,0.215,208,1.593]],["body/classes/CreateUserInput.html",[12,0.034,17,0.311,18,0.258,19,0.258,22,0.424,28,0.755,31,0.755,32,1.004,70,1.709,85,0.388,86,0.348,87,0.021,88,0.027,89,0.021,99,0.916,158,1.875,191,1.499,201,1.787,208,2.579,209,2.881,210,2.881,211,1.952,212,2.549,213,2.549,214,1.787,215,2.549,216,2.064]],["title/classes/CreateUserOutput.html",[86,0.215,216,1.593]],["body/classes/CreateUserOutput.html",[12,0.034,17,0.269,18,0.223,19,0.223,22,0.395,28,0.653,31,0.653,32,0.867,39,1.132,63,0.622,70,1.477,85,0.354,86,0.317,87,0.019,88,0.024,89,0.019,99,0.791,101,0.529,106,0.859,110,1.249,113,1.249,135,1.365,158,1.62,163,2.133,165,1.778,185,1.35,191,1.365,201,2.009,203,2.133,204,1.477,206,1.974,208,1.783,209,2.49,210,2.49,211,1.778,212,2.203,213,2.203,214,1.819,215,2.203,216,2.348,217,2.133,218,2.203,219,2.203]],["title/classes/Logging.html",[35,1.447,86,0.215]],["body/classes/Logging.html",[12,0.034,17,0.228,18,0.189,19,0.189,22,0.393,28,0.554,31,1.086,32,0.737,35,1.91,63,0.726,85,0.228,86,0.204,87,0.016,88,0.022,89,0.016,99,0.672,101,0.449,106,1.003,113,1.459,135,1.222,153,1.376,164,2.598,170,2.598,175,3.22,177,2.598,178,2.936,179,2.936,180,3.372,181,2.115,183,2.115,185,1.147,186,2.115,188,2.115,191,1.222,204,1.742,214,1.457,217,2.37,220,2.441,221,2.936,222,2.936,223,4.076,224,4.076,225,2.936,226,2.441,227,2.441,228,2.441,229,2.441,230,3.389,231,4.076,232,2.441,233,2.936]],["title/injectables/LoggingInterceptor.html",[124,1.764,132,1.206]],["body/injectables/LoggingInterceptor.html",[12,0.034,17,0.22,18,0.182,19,0.182,22,0.422,24,0.709,30,1.325,35,1.325,36,1.802,63,0.542,85,0.22,86,0.197,87,0.015,88,0.021,89,0.015,101,0.433,102,1.696,104,2.048,106,0.75,108,1.696,109,1.696,110,1.09,116,1.208,124,2.267,128,1.614,130,1.86,132,1.55,133,1.614,136,1.802,140,3.171,141,3.3,152,2.036,153,1.325,166,1.802,234,2.351,235,3.97,236,2.827,237,2.827,238,3.97,239,3.97,240,4.975,241,3.583,242,4.975,243,2.827,244,4.588,245,3.97,246,2.827,247,2.351,248,2.827,249,2.827,250,2.827,251,2.351,252,2.827,253,2.827,254,2.827,255,2.827,256,4.588,257,2.827,258,2.827,259,3.97,260,3.97,261,2.351,262,2.827,263,2.827,264,2.827,265,2.827]],["title/classes/LoginInput.html",[86,0.215,112,1.593]],["body/classes/LoginInput.html",[12,0.034,17,0.312,18,0.259,19,0.259,22,0.425,28,0.759,31,0.759,32,1.009,70,1.717,85,0.39,86,0.349,87,0.022,88,0.027,89,0.022,99,0.92,112,2.587,122,2.074,158,1.884,191,1.504,201,1.792,211,1.958,212,2.562,213,2.562,214,1.792,215,2.562,266,2.895]],["title/classes/LoginOutput.html",[86,0.215,122,1.593]],["body/classes/LoginOutput.html",[12,0.034,17,0.27,18,0.224,19,0.224,22,0.396,28,0.655,31,0.655,32,0.871,39,1.136,63,0.623,70,1.483,85,0.355,86,0.318,87,0.019,88,0.025,89,0.019,99,0.794,101,0.531,106,0.862,110,1.253,112,1.79,113,1.253,122,2.354,135,1.369,158,1.626,163,2.139,165,1.782,185,1.355,191,1.369,201,2.012,203,2.139,204,1.483,206,1.982,211,1.782,212,2.212,213,2.212,214,1.823,215,2.212,217,2.139,218,2.212,219,2.212,266,2.5]],["title/modules/MainModule.html",[0,0.848,267,1.968]],["body/modules/MainModule.html",[0,1.435,1,3.345,2,1.56,3,1.56,4,1.884,5,1.884,6,1.884,7,1.884,8,1.884,12,0.033,14,2.434,15,1.884,16,1.884,17,0.284,18,0.236,19,0.236,21,2.694,22,0.406,24,0.916,85,0.284,86,0.254,87,0.02,88,0.025,89,0.02,267,3.849,268,3.036,269,3.036,270,3.345,271,3.652,272,3.652,273,3.652]],["title/classes/PaginationInput.html",[86,0.215,274,1.593]],["body/classes/PaginationInput.html",[12,0.034,17,0.245,18,0.204,19,0.204,22,0.333,28,0.596,39,1.403,63,0.585,85,0.333,86,0.298,87,0.017,88,0.023,89,0.017,99,0.723,101,0.483,106,0.809,113,1.176,135,1.285,190,2.555,191,1.285,201,1.532,203,2.008,204,1.83,211,1.673,214,1.129,274,2.21,275,2.274,276,3.099,277,3.099,278,3.583,279,3.756,280,3.086,281,3.157,282,2.446,283,3.157,284,4.533,285,2.625,286,1.629,287,2.012,288,2.012]],["title/classes/PaginationOutput.html",[86,0.215,286,1.593]],["body/classes/PaginationOutput.html",[12,0.034,17,0.217,18,0.181,19,0.181,22,0.306,28,0.528,39,1.71,63,0.676,85,0.306,86,0.274,87,0.015,88,0.021,89,0.015,99,0.641,101,0.428,106,0.935,110,1.487,113,1.36,135,1.182,163,1.847,165,1.539,185,1.093,190,2.447,191,1.182,201,1.866,203,2.321,204,2.231,206,1.598,211,1.539,214,1.409,217,1.847,218,1.784,219,1.784,274,1.444,275,2.016,276,1.784,277,1.784,278,3.452,279,2.839,280,2.016,282,1.598,284,4.341,285,2.327,286,2.033,287,2.908,288,2.908,289,2.799,290,2.799]],["title/classes/User.html",[31,0.583,86,0.215]],["body/classes/User.html",[12,0.034,17,0.165,18,0.137,19,0.137,22,0.382,24,0.533,28,0.401,31,0.608,39,1.055,63,0.697,70,1.663,85,0.165,86,0.224,87,0.011,88,0.017,89,0.011,99,0.486,101,0.325,102,1.377,106,0.993,108,0.908,109,0.908,110,0.583,113,1.401,116,1.377,117,2.241,130,0.996,135,0.966,138,2.806,149,2.804,153,0.996,158,1.824,159,2.054,161,2.321,162,2.054,164,2.054,165,1.259,167,1.84,169,1.767,170,2.054,173,2.054,175,2.915,177,2.054,178,2.321,179,2.321,180,2.804,181,1.531,183,1.531,185,2.144,186,1.531,188,1.531,190,1.824,191,0.966,194,1.531,211,0.83,214,1.152,217,2.036,226,1.767,227,1.767,228,1.767,229,1.767,230,2.679,232,1.767,291,1.767,292,3.223,293,4.344,294,2.125,295,2.125,296,2.125,297,2.125,298,3.223,299,2.125,300,2.125,301,2.125,302,2.125,303,3.223,304,3.223,305,3.223,306,3.223,307,3.893,308,2.125,309,1.767,310,2.125,311,2.125,312,3.893,313,2.125,314,2.125,315,2.679,316,2.125]],["title/classes/UsersInput.html",[86,0.215,317,1.593]],["body/classes/UsersInput.html",[12,0.034,17,0.259,18,0.215,19,0.215,22,0.388,28,0.629,31,0.944,32,0.836,39,1.091,63,0.607,85,0.345,86,0.309,87,0.018,88,0.024,89,0.024,99,0.763,101,0.51,106,0.839,113,1.22,135,1.333,190,2.082,191,1.333,203,2.082,204,1.424,211,1.735,214,1.787,217,2.082,274,2.864,276,2.831,277,2.831,278,2.831,279,3.2,280,2.401,282,1.903,286,2.292,317,2.292,318,2.401,319,2.401,320,3.333,321,3.333,322,2.771,323,1.719]],["title/modules/UsersModule.html",[0,0.848,13,1.764]],["body/modules/UsersModule.html",[0,1.372,2,1.424,3,1.424,4,1.719,5,1.719,6,1.719,7,2.578,8,2.578,12,0.034,13,3.329,14,2.292,15,1.719,16,1.719,17,0.259,18,0.215,19,0.215,21,1.903,22,0.444,24,0.836,29,2.401,30,1.562,31,0.839,32,0.836,35,1.562,36,2.124,85,0.259,86,0.232,87,0.018,88,0.024,89,0.018,98,2.771,324,2.771,325,2.771,326,2.771,327,3.173,328,3.333,329,2.831,330,3.333,331,2.771]],["title/classes/UsersOutput.html",[86,0.215,323,1.593]],["body/classes/UsersOutput.html",[12,0.034,17,0.2,18,0.166,19,0.166,22,0.338,28,0.485,31,0.899,32,0.644,39,1.724,63,0.741,85,0.288,86,0.258,87,0.014,88,0.02,89,0.026,99,0.588,101,0.393,106,1.025,110,1.577,113,1.49,135,1.112,163,2.232,165,1.86,185,1.448,190,1.737,191,1.112,201,1.325,203,2.543,204,2.249,206,2.117,211,1.448,214,1.555,217,2.466,218,1.636,219,1.636,274,1.912,278,2.362,286,2.799,287,2.362,288,2.362,317,1.325,318,2.67,319,1.849,322,2.135,323,1.912,332,2.568,333,2.568,334,2.568,335,2.568,336,2.568]],["title/classes/UsersResolver.html",[86,0.215,329,1.968]],["body/classes/UsersResolver.html",[12,0.034,17,0.211,18,0.175,19,0.175,22,0.429,24,0.682,28,0.513,31,0.729,32,0.682,63,0.613,85,0.211,86,0.189,87,0.015,88,0.021,89,0.015,99,0.622,101,0.416,102,1.649,104,1.402,106,0.848,108,1.918,109,1.918,110,1.232,113,1.06,114,2.259,116,1.649,117,2.522,118,2.259,119,3.209,120,3.209,121,2.259,124,1.552,125,2.259,126,2.259,127,1.732,128,1.552,130,1.809,208,2.767,216,1.991,317,2.767,323,1.991,327,2.767,329,2.46,331,2.259,337,2.259,338,3.733,339,3.209,340,2.717,341,2.717,342,2.717,343,2.717,344,2.717,345,2.717,346,2.717,347,3.86,348,2.259,349,2.259,350,2.259,351,2.259,352,2.717,353,2.717,354,2.717,355,2.717]],["title/injectables/UsersService.html",[132,1.206,327,1.593]],["body/injectables/UsersService.html",[12,0.035,17,0.161,18,0.134,19,0.134,22,0.378,24,0.52,30,0.971,31,0.391,32,0.52,39,1.035,63,0.523,70,1.351,85,0.161,86,0.144,87,0.011,88,0.017,89,0.017,101,0.317,102,1.351,104,1.631,106,0.724,108,1.638,109,1.638,110,1.052,116,1.351,117,2.212,128,1.184,130,1.482,132,1.235,133,1.184,136,1.321,138,2.779,139,1.723,140,2.733,143,2.629,147,2.629,149,2.761,152,1.493,153,0.971,154,1.723,158,1.796,159,2.015,161,3.089,162,2.443,163,2.164,164,2.443,165,1.901,166,2.015,167,2.189,168,1.723,173,2.015,174,1.723,177,1.321,208,2.212,216,1.069,276,2.733,277,2.015,282,1.184,287,1.321,288,2.015,317,2.212,323,1.069,327,1.631,338,3.187,339,3.187,348,1.723,349,1.723,350,1.723,351,3.187,356,1.723,357,2.073,358,2.073,359,2.073,360,2.073,361,2.073,362,3.162,363,3.162,364,2.073,365,2.073,366,2.073,367,2.073,368,2.073,369,2.073,370,2.073,371,2.073]],["title/controllers/ViewController.html",[372,1.968,373,1.968]],["body/controllers/ViewController.html",[12,0.034,17,0.168,18,0.139,19,0.139,22,0.305,24,0.541,63,0.675,85,0.168,86,0.15,87,0.012,88,0.018,89,0.012,101,0.33,102,1.393,106,0.827,108,1.871,109,2.008,110,1.202,113,1.078,116,1.871,127,1.375,138,3.241,166,1.375,167,2.5,185,0.843,261,5.015,372,2.078,373,2.078,374,1.794,375,1.794,376,2.158,377,5.408,378,3.26,379,3.929,380,3.26,381,3.26,382,2.158,383,5.741,384,5.741,385,3.26,386,2.158,387,5.512,388,2.158,389,4.943,390,3.26,391,2.158,392,2.158,393,2.158,394,3.26,395,2.158,396,2.158,397,2.158,398,1.794,399,2.027,400,1.794,401,2.158,402,2.158,403,1.794,404,2.158,405,2.158,406,2.158,407,2.158,408,3.929,409,2.158,410,2.158,411,2.158]],["title/modules/ViewModule.html",[0,0.848,270,1.764]],["body/modules/ViewModule.html",[0,1.441,2,1.574,3,1.574,4,1.9,5,1.9,6,1.9,7,2.707,8,1.9,12,0.034,14,2.448,15,1.9,16,1.9,17,0.286,18,0.238,19,0.238,21,2.104,22,0.408,24,0.924,85,0.286,86,0.256,87,0.02,88,0.025,89,0.02,270,3.353,373,3.345,374,3.945,399,3.029,400,3.063,412,3.063,413,3.063,414,3.684,415,3.684]],["title/injectables/ViewService.html",[132,1.206,399,1.593]],["body/injectables/ViewService.html",[12,0.034,17,0.229,18,0.19,19,0.19,22,0.394,24,0.739,26,2.122,44,2.122,63,0.558,85,0.229,86,0.205,87,0.016,88,0.022,89,0.016,101,0.451,102,1.746,104,1.52,106,0.956,108,1.259,109,1.259,110,0.809,116,1.746,117,2.108,127,1.878,130,1.381,132,1.596,133,1.682,135,1.225,136,2.989,138,2.678,159,1.878,165,1.151,167,1.682,173,1.878,241,2.122,251,2.45,315,2.45,399,2.108,403,4.211,416,2.45,417,3.378,418,5.506,419,2.947,420,5.506,421,4.086,422,2.947,423,5.321,424,2.947,425,4.086,426,2.947,427,4.086,428,2.947,429,2.947,430,2.947,431,2.947,432,2.947]],["title/coverage.html",[433,3.04]],["body/coverage.html",[0,0.761,12,0.034,19,0.179,31,0.523,35,1.299,63,0.378,86,0.421,87,0.015,88,0.021,89,0.015,93,1.43,95,1.766,100,2.304,112,1.43,122,1.43,124,1.582,132,1.926,134,2.304,162,1.766,175,1.582,176,2.304,201,0.991,202,2.304,208,1.43,209,2.819,210,2.819,216,1.43,220,2.304,234,2.304,266,2.819,274,1.43,275,2.819,286,1.43,291,2.304,317,1.43,318,2.819,319,2.819,323,1.43,327,1.43,329,1.766,337,2.304,356,2.304,372,1.766,373,1.766,375,2.304,399,1.43,416,2.304,433,1.996,434,2.771,435,2.771,436,2.771,437,6.226,438,5.55,439,4.932,440,2.771,441,2.771,442,2.304,443,2.771,444,4.539,445,4.539,446,2.771,447,2.771,448,2.771]],["title/dependencies.html",[3,1.588,449,2.577]],["body/dependencies.html",[3,1.43,12,0.034,23,2.782,24,0.84,26,2.41,28,0.632,30,1.568,64,2.782,86,0.31,87,0.018,88,0.024,89,0.018,137,3.704,153,1.568,194,2.41,241,2.41,247,2.782,309,2.782,398,4.439,417,2.41,450,5.008,451,3.346,452,3.346,453,3.346,454,3.346,455,3.346,456,3.346,457,3.346,458,3.346,459,3.346,460,3.346,461,3.346,462,3.346,463,3.346,464,4.455,465,3.346,466,3.346,467,3.346,468,3.346,469,3.346,470,3.346,471,3.346,472,4.455,473,4.455,474,3.346,475,3.346,476,3.346,477,3.346,478,3.346,479,3.346,480,3.346,481,3.346]],["title/index.html",[101,0.394,482,2.577,483,2.577]],["body/index.html",[12,0.033,18,0.207,44,2.309,50,2.665,87,0.017,88,0.023,89,0.017,140,2.043,417,2.309,433,2.309,484,3.206,485,3.206,486,4.329,487,3.206,488,3.206,489,3.206,490,3.206,491,3.206,492,3.206,493,4.901,494,3.206,495,3.206,496,3.206,497,5.773,498,3.206,499,3.206,500,5.648,501,3.206,502,3.206,503,4.329,504,3.206,505,3.206,506,3.206,507,4.329,508,4.329,509,3.206,510,3.206,511,3.206,512,4.329,513,4.329,514,3.206,515,3.206,516,3.206,517,3.206,518,3.206,519,2.665,520,3.206,521,3.206,522,3.206,523,3.206,524,3.206,525,3.206,526,3.206,527,3.206,528,3.206,529,3.206,530,3.206,531,3.206,532,3.206,533,3.206,534,3.206,535,3.206,536,3.206,537,3.206]],["title/modules.html",[2,1.803]],["body/modules.html",[1,2.448,2,1.832,11,2.448,12,0.028,13,2.448,87,0.023,88,0.028,89,0.023,267,2.732,270,2.448,519,4.986,538,5.998,539,5.998,540,5.998]],["title/overview.html",[541,3.509]],["body/overview.html",[0,0.894,1,3.309,2,1.391,3,1.391,4,1.679,5,1.679,6,1.679,7,1.679,8,1.679,9,2.706,10,2.706,11,3.239,12,0.033,13,3.239,14,2.256,15,1.679,16,1.679,87,0.017,88,0.023,89,0.017,90,2.706,91,2.706,92,2.706,93,2.99,99,0.745,133,1.859,267,3.615,268,2.706,269,2.706,270,3.146,282,1.859,324,2.706,325,2.706,326,2.706,327,2.99,372,2.074,399,2.548,412,2.706,413,2.706,541,2.706,542,3.255,543,3.255,544,3.255]],["title/miscellaneous/variables.html",[545,2.142,546,3.089]],["body/miscellaneous/variables.html",[0,1.512,12,0.031,63,0.641,87,0.025,88,0.03,89,0.025,101,0.719,442,3.903,545,3.903,546,3.903,547,4.695]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":282,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["1.17.2",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":314,"title":{},"body":{"classes/User.html":{}}}],["10.2.3",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":544,"title":{},"body":{"overview.html":{}}}],["15.5.0",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["17.0.2",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["17.4.0",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["2.1.6",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["2.25.1",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":280,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{}}}],["3.0.2",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":543,"title":{},"body":{"overview.html":{}}}],["5",{"_index":542,"title":{},"body":{"overview.html":{}}}],["6.6.6",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["7.0.5",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["7.11.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":520,"title":{},"body":{"index.html":{}}}],["apassword",{"_index":300,"title":{},"body":{"classes/User.html":{}}}],["apollo",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":499,"title":{},"body":{"index.html":{}}}],["applications",{"_index":491,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":118,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["args('input",{"_index":352,"title":{},"body":{"classes/UsersResolver.html":{}}}],["asc",{"_index":370,"title":{},"body":{"injectables/UsersService.html":{}}}],["assets",{"_index":378,"title":{},"body":{"controllers/ViewController.html":{}}}],["assets(@req",{"_index":411,"title":{},"body":{"controllers/ViewController.html":{}}}],["assets(req",{"_index":382,"title":{},"body":{"controllers/ViewController.html":{}}}],["async",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":530,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":95,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":93,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["autoschemafile",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["backers",{"_index":521,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":308,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.compare(apassword",{"_index":316,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":313,"title":{},"body":{"classes/User.html":{}}}],["bcryptjs",{"_index":309,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["beforeinsert",{"_index":305,"title":{},"body":{"classes/User.html":{}}}],["beforeinsert()@beforeupdate",{"_index":301,"title":{},"body":{"classes/User.html":{}}}],["beforeupdate",{"_index":306,"title":{},"body":{"classes/User.html":{}}}],["boolean",{"_index":206,"title":{},"body":{"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["browse",{"_index":540,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":538,"title":{},"body":{"modules.html":{}}}],["building",{"_index":487,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":242,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["cascade",{"_index":224,"title":{},"body":{"classes/Logging.html":{}}}],["catch",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["catcherror",{"_index":248,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["catcherror((err",{"_index":263,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["checkpassword",{"_index":292,"title":{},"body":{"classes/User.html":{}}}],["checkpassword(apassword",{"_index":298,"title":{},"body":{"classes/User.html":{}}}],["class",{"_index":86,"title":{"classes/AuthResolver.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":99,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["clianor",{"_index":410,"title":{},"body":{"controllers/ViewController.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":268,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":269,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":324,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":325,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":326,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_viewmodule",{"_index":412,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_providers",{"_index":413,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["column",{"_index":307,"title":{},"body":{"classes/User.html":{}}}],["configmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":420,"title":{},"body":{"injectables/ViewService.html":{}}}],["conflictexception",{"_index":362,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('before",{"_index":253,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(`after",{"_index":259,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(error",{"_index":315,"title":{},"body":{"classes/User.html":{},"injectables/ViewService.html":{}}}],["const",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["constructor(authservice",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(configservice",{"_index":419,"title":{},"body":{"injectables/ViewService.html":{}}}],["constructor(loggingrepository",{"_index":236,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["constructor(userrepository",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":340,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.req.session",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":372,"title":{"controllers/ViewController.html":{}},"body":{"controllers/ViewController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":374,"title":{},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{}}}],["core.dto",{"_index":285,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{}}}],["coreentity",{"_index":175,"title":{"classes/CoreEntity.html":{}},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{},"coverage.html":{}}}],["coreentity:15",{"_index":228,"title":{},"body":{"classes/Logging.html":{},"classes/User.html":{}}}],["coreentity:20",{"_index":226,"title":{},"body":{"classes/Logging.html":{},"classes/User.html":{}}}],["coreentity:25",{"_index":229,"title":{},"body":{"classes/Logging.html":{},"classes/User.html":{}}}],["coreentity:30",{"_index":227,"title":{},"body":{"classes/Logging.html":{},"classes/User.html":{}}}],["coreoutput",{"_index":201,"title":{"classes/CoreOutput.html":{}},"body":{"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["coreoutput:6",{"_index":218,"title":{},"body":{"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{}}}],["coreoutput:9",{"_index":219,"title":{},"body":{"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{}}}],["coverage",{"_index":433,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":177,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["createdatecolumn",{"_index":195,"title":{},"body":{"classes/CoreEntity.html":{}}}],["createserver",{"_index":425,"title":{},"body":{"injectables/ViewService.html":{}}}],["createuser",{"_index":338,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserinput",{"_index":342,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(undefined",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserinput",{"_index":208,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuseroutput",{"_index":216,"title":{"classes/CreateUserOutput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["database",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":180,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["date.now",{"_index":256,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["db_host",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["db_name",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["db_password",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["db_port",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["db_username",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["debug",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["decorators",{"_index":113,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"controllers/ViewController.html":{}}}],["default",{"_index":200,"title":{},"body":{"classes/CoreEntity.html":{}}}],["default('development",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultvalue",{"_index":279,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{}}}],["defined",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["deletedat",{"_index":178,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["deletedatecolumn",{"_index":196,"title":{},"body":{"classes/CoreEntity.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":492,"title":{},"body":{"index.html":{}}}],["dev",{"_index":428,"title":{},"body":{"injectables/ViewService.html":{}}}],["development",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["dir",{"_index":430,"title":{},"body":{"injectables/ViewService.html":{}}}],["documentation",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":509,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":488,"title":{},"body":{"index.html":{}}}],["email",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":230,"title":{},"body":{"classes/Logging.html":{},"classes/User.html":{}}}],["env",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":264,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["error",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["executioncontext",{"_index":240,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["exists",{"_index":363,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["express",{"_index":398,"title":{},"body":{"controllers/ViewController.html":{},"dependencies.html":{}}}],["extends",{"_index":214,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["false",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"classes/Logging.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["field",{"_index":190,"title":{},"body":{"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["field(undefined",{"_index":203,"title":{},"body":{"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["framework",{"_index":486,"title":{},"body":{"index.html":{}}}],["get('_next",{"_index":385,"title":{},"body":{"controllers/ViewController.html":{}}}],["get('home",{"_index":394,"title":{},"body":{"controllers/ViewController.html":{}}}],["getnextserver",{"_index":403,"title":{},"body":{"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["getting",{"_index":482,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":339,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["getusers(@args('input",{"_index":354,"title":{},"body":{"classes/UsersResolver.html":{}}}],["getusers(undefined",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusers(usersinput",{"_index":344,"title":{},"body":{"classes/UsersResolver.html":{}}}],["graphql",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":516,"title":{},"body":{"index.html":{}}}],["handle",{"_index":257,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["handler",{"_index":379,"title":{},"body":{"controllers/ViewController.html":{}}}],["handler(req",{"_index":388,"title":{},"body":{"controllers/ViewController.html":{}}}],["hashpassword",{"_index":293,"title":{},"body":{"classes/User.html":{}}}],["here",{"_index":527,"title":{},"body":{"index.html":{}}}],["host",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["https://nestjs.com",{"_index":534,"title":{},"body":{"index.html":{}}}],["id",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["identifier",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":251,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ViewService.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{}}}],["include",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":101,"title":{"index.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["inherited",{"_index":217,"title":{},"body":{"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["inject",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(context",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":132,"title":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["injectables",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{},"overview.html":{}}}],["injectrepository",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{}}}],["injectrepository(logging",{"_index":252,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["injectrepository(user",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inputtype",{"_index":211,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["inputtype('userinputtype",{"_index":310,"title":{},"body":{"classes/User.html":{}}}],["installation",{"_index":496,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":498,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["int",{"_index":284,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{}}}],["intercept",{"_index":235,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":239,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["internalservererrorexception",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["isdate",{"_index":192,"title":{},"body":{"classes/CoreEntity.html":{}}}],["isdate()@field(undefined)@createdatecolumn",{"_index":181,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["isdate()@field(undefined)@deletedatecolumn",{"_index":183,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["isdate()@field(undefined)@updatedatecolumn",{"_index":188,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["isemail",{"_index":303,"title":{},"body":{"classes/User.html":{}}}],["isemail()@field(undefined)@column({unique",{"_index":294,"title":{},"body":{"classes/User.html":{}}}],["isglobal",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["isnumber",{"_index":193,"title":{},"body":{"classes/CoreEntity.html":{}}}],["isnumber()@field(undefined)@primarygeneratedcolumn('uuid",{"_index":186,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["isstring",{"_index":304,"title":{},"body":{"classes/User.html":{}}}],["isstring()@field(undefined)@column({select",{"_index":296,"title":{},"body":{"classes/User.html":{}}}],["joi",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().required",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":523,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":531,"title":{},"body":{"index.html":{}}}],["keepconnectionalive",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["key",{"_index":401,"title":{},"body":{"controllers/ViewController.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["license",{"_index":537,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":513,"title":{},"body":{"index.html":{}}}],["limit",{"_index":276,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":390,"title":{},"body":{"controllers/ViewController.html":{}}}],["logging",{"_index":35,"title":{"classes/Logging.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["logginginterceptor",{"_index":124,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/LoggingInterceptor.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["loggingrepository",{"_index":238,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["login",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["login(@args('input",{"_index":129,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(logininput",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(undefined",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["logininput",{"_index":112,"title":{"classes/LoginInput.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"coverage.html":{}}}],["loginoutput",{"_index":122,"title":{"classes/LoginOutput.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"coverage.html":{}}}],["mainmodule",{"_index":267,"title":{"modules/MainModule.html":{}},"body":{"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["manytoone",{"_index":231,"title":{},"body":{"classes/Logging.html":{}}}],["manytoone(undefined",{"_index":221,"title":{},"body":{"classes/Logging.html":{}}}],["matching",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalresults",{"_index":371,"title":{},"body":{"injectables/UsersService.html":{}}}],["metadata",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":102,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["miscellaneous",{"_index":545,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":512,"title":{},"body":{"index.html":{}}}],["mode",{"_index":503,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":526,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":119,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":114,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["mysql",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mysql2",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":532,"title":{},"body":{"index.html":{}}}],["name",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["nest",{"_index":493,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":536,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":245,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"modules/MainModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":241,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["next/dist/server/next",{"_index":426,"title":{},"body":{"injectables/ViewService.html":{}}}],["nextserver",{"_index":423,"title":{},"body":{"injectables/ViewService.html":{}}}],["node.js",{"_index":485,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["notfoundexception",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["now",{"_index":255,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":260,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":497,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":204,"title":{},"body":{"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["number",{"_index":278,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["object.assign(req.query",{"_index":406,"title":{},"body":{"controllers/ViewController.html":{}}}],["object.keys(context",{"_index":254,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["objecttype",{"_index":191,"title":{},"body":{"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["observable",{"_index":244,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["ok",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["ondelete",{"_index":223,"title":{},"body":{"classes/Logging.html":{}}}],["onmoduleinit",{"_index":418,"title":{},"body":{"injectables/ViewService.html":{}}}],["open",{"_index":514,"title":{},"body":{"index.html":{}}}],["optional",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["order",{"_index":369,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["overview",{"_index":541,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":449,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":277,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"injectables/UsersService.html":{}}}],["paginationinput",{"_index":274,"title":{"classes/PaginationInput.html":{}},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["paginationinput:10",{"_index":320,"title":{},"body":{"classes/UsersInput.html":{}}}],["paginationinput:7",{"_index":321,"title":{},"body":{"classes/UsersInput.html":{}}}],["paginationoutput",{"_index":286,"title":{"classes/PaginationOutput.html":{}},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["paginationoutput:16",{"_index":333,"title":{},"body":{"classes/UsersOutput.html":{}}}],["paginationoutput:19",{"_index":334,"title":{},"body":{"classes/UsersOutput.html":{}}}],["paginationoutput:6",{"_index":335,"title":{},"body":{"classes/UsersOutput.html":{}}}],["paginationoutput:9",{"_index":336,"title":{},"body":{"classes/UsersOutput.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["password",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["passwordcorrect",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["picktype",{"_index":212,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{}}}],["picktype(user",{"_index":215,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{}}}],["pipe",{"_index":262,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipe(tap((res",{"_index":258,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["playground",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":524,"title":{},"body":{"index.html":{}}}],["port",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":376,"title":{},"body":{"controllers/ViewController.html":{}}}],["primarygeneratedcolumn",{"_index":197,"title":{},"body":{"classes/CoreEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":199,"title":{},"body":{"classes/CoreEntity.html":{}}}],["private",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["private_key",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_port",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"injectables/ViewService.html":{},"index.html":{}}}],["progressive",{"_index":484,"title":{},"body":{"index.html":{}}}],["project",{"_index":515,"title":{},"body":{"index.html":{}}}],["promise",{"_index":117,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["properties",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"injectables/ViewService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["public",{"_index":377,"title":{},"body":{"controllers/ViewController.html":{}}}],["query",{"_index":347,"title":{},"body":{"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":345,"title":{},"body":{"classes/UsersResolver.html":{}}}],["react",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":525,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["record",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["render",{"_index":404,"title":{},"body":{"controllers/ViewController.html":{}}}],["repository",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":387,"title":{},"body":{"controllers/ViewController.html":{}}}],["req.url",{"_index":405,"title":{},"body":{"controllers/ViewController.html":{}}}],["request",{"_index":383,"title":{},"body":{"controllers/ViewController.html":{}}}],["request.credentials",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":261,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"controllers/ViewController.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["resolver",{"_index":120,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["response",{"_index":384,"title":{},"body":{"controllers/ViewController.html":{}}}],["result",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":130,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["returns",{"_index":116,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["rimraf",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":500,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":247,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":250,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["scalable",{"_index":489,"title":{},"body":{"index.html":{}}}],["select",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["server",{"_index":417,"title":{},"body":{"injectables/ViewService.html":{},"dependencies.html":{},"index.html":{}}}],["server/common/core.dto",{"_index":213,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{}}}],["server/common/core.entity",{"_index":232,"title":{},"body":{"classes/Logging.html":{},"classes/User.html":{}}}],["server/common/pagination.dto",{"_index":322,"title":{},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["server/entities/logging.entity",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/UsersModule.html":{}}}],["server/entities/user.entity",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["server/module/app.module",{"_index":272,"title":{},"body":{"modules/MainModule.html":{}}}],["server/module/auth/auth.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["server/module/auth/auth.resolver",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["server/module/auth/auth.service",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["server/module/auth/dtos/login.dto",{"_index":123,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["server/module/logging/logging.interceptor",{"_index":125,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["server/module/users/dtos/create",{"_index":348,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["server/module/users/dtos/get",{"_index":350,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["server/module/users/users.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["server/module/users/users.resolver",{"_index":330,"title":{},"body":{"modules/UsersModule.html":{}}}],["server/module/users/users.service",{"_index":331,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["server/view/view.module",{"_index":273,"title":{},"body":{"modules/MainModule.html":{}}}],["serversideprops",{"_index":389,"title":{},"body":{"controllers/ViewController.html":{}}}],["session",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["settings",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["showhome",{"_index":380,"title":{},"body":{"controllers/ViewController.html":{}}}],["showhome(@req",{"_index":409,"title":{},"body":{"controllers/ViewController.html":{}}}],["showhome(req",{"_index":393,"title":{},"body":{"controllers/ViewController.html":{}}}],["showindex",{"_index":381,"title":{},"body":{"controllers/ViewController.html":{}}}],["showindex(@req",{"_index":407,"title":{},"body":{"controllers/ViewController.html":{}}}],["showindex(req",{"_index":396,"title":{},"body":{"controllers/ViewController.html":{}}}],["side",{"_index":490,"title":{},"body":{"index.html":{}}}],["skip",{"_index":367,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"index.html":{}}}],["sponsors",{"_index":518,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/client",{"_index":431,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/server/common/core.dto.ts",{"_index":202,"title":{},"body":{"classes/CoreOutput.html":{},"coverage.html":{}}}],["src/server/common/core.dto.ts:6",{"_index":205,"title":{},"body":{"classes/CoreOutput.html":{}}}],["src/server/common/core.dto.ts:9",{"_index":207,"title":{},"body":{"classes/CoreOutput.html":{}}}],["src/server/common/core.entity.ts",{"_index":176,"title":{},"body":{"classes/CoreEntity.html":{},"coverage.html":{}}}],["src/server/common/core.entity.ts:15",{"_index":187,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/core.entity.ts:20",{"_index":182,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/core.entity.ts:25",{"_index":189,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/core.entity.ts:30",{"_index":184,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/pagination.dto.ts",{"_index":275,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"coverage.html":{}}}],["src/server/common/pagination.dto.ts:10",{"_index":281,"title":{},"body":{"classes/PaginationInput.html":{}}}],["src/server/common/pagination.dto.ts:16",{"_index":289,"title":{},"body":{"classes/PaginationOutput.html":{}}}],["src/server/common/pagination.dto.ts:19",{"_index":290,"title":{},"body":{"classes/PaginationOutput.html":{}}}],["src/server/common/pagination.dto.ts:7",{"_index":283,"title":{},"body":{"classes/PaginationInput.html":{}}}],["src/server/entities/logging.entity.ts",{"_index":220,"title":{},"body":{"classes/Logging.html":{},"coverage.html":{}}}],["src/server/entities/logging.entity.ts:13",{"_index":225,"title":{},"body":{"classes/Logging.html":{}}}],["src/server/entities/user.entity.ts",{"_index":291,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/server/entities/user.entity.ts:15",{"_index":295,"title":{},"body":{"classes/User.html":{}}}],["src/server/entities/user.entity.ts:20",{"_index":297,"title":{},"body":{"classes/User.html":{}}}],["src/server/entities/user.entity.ts:24",{"_index":302,"title":{},"body":{"classes/User.html":{}}}],["src/server/entities/user.entity.ts:35",{"_index":299,"title":{},"body":{"classes/User.html":{}}}],["src/server/main.module.ts",{"_index":271,"title":{},"body":{"modules/MainModule.html":{}}}],["src/server/main.ts",{"_index":442,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server/module/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/server/module/auth/auth.module.ts",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/server/module/auth/auth.resolver.ts",{"_index":100,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/server/module/auth/auth.resolver.ts:10",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/server/module/auth/auth.resolver.ts:14",{"_index":115,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/server/module/auth/auth.service.ts",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/server/module/auth/auth.service.ts:17",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/server/module/auth/auth.service.ts:26",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/server/module/auth/dtos/login.dto.ts",{"_index":266,"title":{},"body":{"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"coverage.html":{}}}],["src/server/module/logging/logging.interceptor.ts",{"_index":234,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/server/module/logging/logging.interceptor.ts:14",{"_index":237,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/server/module/logging/logging.interceptor.ts:20",{"_index":243,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/server/module/users/dtos/create",{"_index":209,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"coverage.html":{}}}],["src/server/module/users/dtos/get",{"_index":318,"title":{},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["src/server/module/users/users.module.ts",{"_index":328,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/server/module/users/users.resolver.ts",{"_index":337,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/server/module/users/users.resolver.ts:14",{"_index":341,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/server/module/users/users.resolver.ts:18",{"_index":343,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/server/module/users/users.resolver.ts:25",{"_index":346,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/server/module/users/users.service.ts",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/server/module/users/users.service.ts:17",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/server/module/users/users.service.ts:23",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/server/module/users/users.service.ts:54",{"_index":361,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/server/view/view.controller.ts",{"_index":375,"title":{},"body":{"controllers/ViewController.html":{},"coverage.html":{}}}],["src/server/view/view.controller.ts:10",{"_index":391,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.controller.ts:26",{"_index":397,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.controller.ts:31",{"_index":395,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.controller.ts:37",{"_index":386,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.module.ts",{"_index":414,"title":{},"body":{"modules/ViewModule.html":{}}}],["src/server/view/view.service.ts",{"_index":416,"title":{},"body":{"injectables/ViewService.html":{},"coverage.html":{}}}],["src/server/view/view.service.ts:12",{"_index":424,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/server/view/view.service.ts:24",{"_index":422,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/server/view/view.service.ts:8",{"_index":421,"title":{},"body":{"injectables/ViewService.html":{}}}],["start",{"_index":501,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":504,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":505,"title":{},"body":{"index.html":{}}}],["started",{"_index":483,"title":{"index.html":{}},"body":{}}],["starter",{"_index":495,"title":{},"body":{"index.html":{}}}],["statements",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":528,"title":{},"body":{"index.html":{}}}],["string",{"_index":185,"title":{},"body":{"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersOutput.html":{},"controllers/ViewController.html":{}}}],["support",{"_index":519,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":539,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":368,"title":{},"body":{"injectables/UsersService.html":{}}}],["tap",{"_index":249,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":508,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":511,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":510,"title":{},"body":{"index.html":{}}}],["tests",{"_index":507,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":517,"title":{},"body":{"index.html":{}}}],["this.authservice.login(logininput",{"_index":131,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.configservice.get('node_env",{"_index":429,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.handler(req",{"_index":408,"title":{},"body":{"controllers/ViewController.html":{}}}],["this.password",{"_index":312,"title":{},"body":{"classes/User.html":{}}}],["this.server",{"_index":427,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.server.prepare",{"_index":432,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.session",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.session.user",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.create",{"_index":365,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findandcount",{"_index":366,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.userrepository.save",{"_index":364,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(createuserinput",{"_index":353,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.getusers(usersinput",{"_index":355,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.viewservice",{"_index":402,"title":{},"body":{"controllers/ViewController.html":{}}}],["throw",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["throwerror",{"_index":246,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["throwerror(err",{"_index":265,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["tools",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["totalpages",{"_index":287,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["totalresults",{"_index":288,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":529,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["twitter",{"_index":535,"title":{},"body":{"index.html":{}}}],["type",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/Logging.html":{},"injectables/LoggingInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([logging",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":494,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":222,"title":{},"body":{"classes/Logging.html":{}}}],["unique",{"_index":311,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":506,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":179,"title":{},"body":{"classes/CoreEntity.html":{},"classes/Logging.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":198,"title":{},"body":{"classes/CoreEntity.html":{}}}],["useinterceptors",{"_index":121,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["useinterceptors(logginginterceptor",{"_index":126,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["user",{"_index":31,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/Logging.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.checkpassword(password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":349,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":210,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"coverage.html":{}}}],["user.id",{"_index":233,"title":{},"body":{"classes/Logging.html":{}}}],["username",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":351,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.ts",{"_index":319,"title":{},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["users.ts:14",{"_index":332,"title":{},"body":{"classes/UsersOutput.html":{}}}],["usersinput",{"_index":317,"title":{"classes/UsersInput.html":{}},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":13,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersoutput",{"_index":323,"title":{"classes/UsersOutput.html":{}},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersresolver",{"_index":329,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":327,"title":{"injectables/UsersService.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid('production",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["validationschema",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":194,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{},"dependencies.html":{}}}],["variable",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":546,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view.controller",{"_index":415,"title":{},"body":{"modules/ViewModule.html":{}}}],["view.service",{"_index":400,"title":{},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{}}}],["viewcontroller",{"_index":373,"title":{"controllers/ViewController.html":{}},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{},"coverage.html":{}}}],["viewmodule",{"_index":270,"title":{"modules/ViewModule.html":{}},"body":{"modules/MainModule.html":{},"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["viewservice",{"_index":399,"title":{"injectables/ViewService.html":{}},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"overview.html":{}}}],["watch",{"_index":502,"title":{},"body":{"index.html":{}}}],["website",{"_index":533,"title":{},"body":{"index.html":{}}}],["yes",{"_index":392,"title":{},"body":{"controllers/ViewController.html":{}}}],["you'd",{"_index":522,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/module/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as Joi from 'joi';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { UsersModule } from '@server/module/users/users.module';\nimport { AuthModule } from '@server/module/auth/auth.module';\nimport { Logging } from '@server/entities/logging.entity';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n      ignoreEnvFile: process.env.NODE_ENV === 'production',\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string()\n          .valid('production', 'development')\n          .default('development'),\n        PORT: Joi.number().default(3000),\n        DB_HOST: Joi.string().required(),\n        DB_PORT: Joi.number().required(),\n        DB_USERNAME: Joi.string().required(),\n        DB_PASSWORD: Joi.string().required(),\n        DB_NAME: Joi.string().required(),\n        PRIVATE_KEY: Joi.string().required(),\n      }),\n    }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST,\n      port: +process.env.DB_PORT,\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      logging: process.env.NODE_ENV !== 'production',\n      synchronize: process.env.NODE_ENV !== 'production',\n      entities: [User, Logging],\n      keepConnectionAlive: true,\n      autoLoadEntities: true,\n    }),\n    GraphQLModule.forRoot({\n      autoSchemaFile: true,\n      debug: process.env.NODE_ENV !== 'production',\n      playground: process.env.NODE_ENV !== 'production' && {\n        settings: {\n          'request.credentials': 'include',\n        },\n      },\n    }),\n    AuthModule,\n    UsersModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/module/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { Logging } from '@server/entities/logging.entity';\nimport { AuthResolver } from '@server/module/auth/auth.resolver';\nimport { AuthService } from '@server/module/auth/auth.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Logging, User])],\n  providers: [AuthResolver, AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/auth.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/auth/auth.resolver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(loginInput: LoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/server/module/auth/auth.resolver.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInput\n                                    \n                                                LoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@server/entities/user.entity';\nimport { Args, Mutation, Resolver } from '@nestjs/graphql';\nimport { UseInterceptors } from '@nestjs/common';\nimport { AuthService } from '@server/module/auth/auth.service';\nimport { LoginInput, LoginOutput } from '@server/module/auth/dtos/login.dto';\nimport { LoggingInterceptor } from '@server/module/logging/logging.interceptor';\n\n@UseInterceptors(LoggingInterceptor)\n@Resolver(() => User)\nexport class AuthResolver {\n  constructor(private readonly authService: AuthService) {}\n\n  @Mutation(() => LoginOutput)\n  login(@Args('input') loginInput: LoginInput): Promise {\n    return this.authService.login(loginInput);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, context)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginInput)\n                \n            \n\n\n            \n                \n                    Defined in src/server/module/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/module/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { LoginInput, LoginOutput } from '@server/module/auth/dtos/login.dto';\nimport { Repository } from 'typeorm';\nimport { CONTEXT } from '@nestjs/graphql';\n\n@Injectable()\nexport class AuthService {\n  private session: Record;\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @Inject(CONTEXT) private context,\n  ) {\n    this.session = context.req.session;\n  }\n\n  async login({ email, password }: LoginInput): Promise {\n    try {\n      if (this.session.user) {\n        throw new UnauthorizedException({\n          ok: false,\n          error: '이미 로그인되어 있습니다',\n        });\n      }\n\n      const user = await this.userRepository.findOne(\n        {\n          email,\n        },\n        { select: ['id', 'password'] },\n      );\n      if (!user) {\n        throw new NotFoundException({\n          ok: false,\n          error: '유저가 존재하지 않습니다.',\n        });\n      }\n\n      const passwordCorrect = await user.checkPassword(password);\n      if (!passwordCorrect) {\n        throw new UnauthorizedException({\n          ok: false,\n          error: '잘못된 패스워드입니다',\n        });\n      }\n\n      this.session.user = user;\n\n      return { ok: true };\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n      throw new InternalServerErrorException({\n        ok: false,\n        error: '로그인에 실패했습니다.',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreEntity.html":{"url":"classes/CoreEntity.html","title":"class - CoreEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/core.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { IsDate, IsNumber } from 'class-validator';\nimport {\n  CreateDateColumn,\n  DeleteDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@ObjectType()\nclass CoreEntity {\n  @IsNumber()\n  @Field(() => String)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @IsDate()\n  @Field(() => Date)\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @IsDate()\n  @Field(() => Date)\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @IsDate()\n  @Field(() => Date)\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport default CoreEntity;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreOutput.html":{"url":"classes/CoreOutput.html","title":"class - CoreOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/core.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class CoreOutput {\n  @Field(() => String, { nullable: true })\n  error?: string;\n\n  @Field(() => Boolean)\n  ok: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { CoreOutput } from '@server/common/core.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class CreateUserOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserOutput.html":{"url":"classes/CreateUserOutput.html","title":"class - CreateUserOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { CoreOutput } from '@server/common/core.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class CreateUserOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logging.html":{"url":"classes/Logging.html","title":"class - Logging","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logging\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/entities/logging.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false, onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/entities/logging.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:25\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType } from '@nestjs/graphql';\nimport { Entity, ManyToOne } from 'typeorm';\nimport CoreEntity from '@server/common/core.entity';\nimport { User } from '@server/entities/user.entity';\n\n@ObjectType()\n@Entity()\nexport class Logging extends CoreEntity {\n  @ManyToOne(() => User, (user) => user.id, {\n    nullable: false,\n    onDelete: 'CASCADE',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/logging/logging.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/logging/logging.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/server/module/logging/logging.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Logging } from '@server/entities/logging.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  constructor(\n    @InjectRepository(Logging)\n    private readonly loggingRepository: Repository,\n  ) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('Before...', context, Object.keys(context));\n\n    const now = Date.now();\n\n    return next\n      .handle()\n      .pipe(tap((res) => console.log(`After... ${Date.now() - now}ms`, res)))\n      .pipe(\n        catchError((err) => {\n          console.log(`After... ${Date.now() - now}ms`, err);\n          return throwError(err);\n        }),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInput.html":{"url":"classes/LoginInput.html","title":"class - LoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { User } from '@server/entities/user.entity';\nimport { CoreOutput } from '@server/common/core.dto';\n\n@InputType()\nexport class LoginInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class LoginOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOutput.html":{"url":"classes/LoginOutput.html","title":"class - LoginOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/dtos/login.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { User } from '@server/entities/user.entity';\nimport { CoreOutput } from '@server/common/core.dto';\n\n@InputType()\nexport class LoginInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class LoginOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nAppModule->MainModule\n\n\n\n\n\nViewModule\n\nViewModule\n\nMainModule -->\n\nViewModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                        \n                            ViewModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppModule } from '@server/module/app.module';\nimport { ViewModule } from '@server/view/view.module';\n\n@Module({\n  imports: [AppModule, ViewModule],\n})\nexport class MainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationInput.html":{"url":"classes/PaginationInput.html","title":"class - PaginationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int, ObjectType } from '@nestjs/graphql';\nimport { CoreOutput } from './core.dto';\n\n@InputType()\nexport class PaginationInput {\n  @Field(() => Int, { defaultValue: 1 })\n  page: number;\n\n  @Field(() => Int, { defaultValue: 25 })\n  limit: number;\n}\n\n@ObjectType()\nexport class PaginationOutput extends CoreOutput {\n  @Field(() => Int, { nullable: true })\n  totalPages?: number;\n\n  @Field(() => Int, { nullable: true })\n  totalResults?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationOutput.html":{"url":"classes/PaginationOutput.html","title":"class - PaginationOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/pagination.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                totalPages\n                            \n                            \n                                    Optional\n                                totalResults\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int, ObjectType } from '@nestjs/graphql';\nimport { CoreOutput } from './core.dto';\n\n@InputType()\nexport class PaginationInput {\n  @Field(() => Int, { defaultValue: 1 })\n  page: number;\n\n  @Field(() => Int, { defaultValue: 25 })\n  limit: number;\n}\n\n@ObjectType()\nexport class PaginationOutput extends CoreOutput {\n  @Field(() => Int, { nullable: true })\n  totalPages?: number;\n\n  @Field(() => Int, { nullable: true })\n  totalResults?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/entities/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkPassword\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@Field(undefined)@Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/entities/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@Field(undefined)@Column({select: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/entities/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@Field(undefined)@PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPassword(aPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/server/entities/user.entity.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()@BeforeUpdate()\n                \n            \n\n            \n                \n                    Defined in src/server/entities/user.entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport CoreEntity from '@server/common/core.entity';\nimport { IsEmail, IsString } from 'class-validator';\nimport { BeforeInsert, BeforeUpdate, Column, Entity } from 'typeorm';\nimport * as bcrypt from 'bcryptjs';\nimport { InternalServerErrorException } from '@nestjs/common';\n\n@InputType('UserInputType')\n@ObjectType()\n@Entity()\nexport class User extends CoreEntity {\n  @IsEmail()\n  @Field(() => String)\n  @Column({ unique: true })\n  email: string;\n\n  @IsString()\n  @Field(() => String)\n  @Column({ select: false })\n  password: string;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  async hashPassword(): Promise {\n    if (this.password) {\n      try {\n        this.password = await bcrypt.hash(this.password, 10);\n      } catch (error) {\n        console.log(error);\n        throw new InternalServerErrorException();\n      }\n    }\n  }\n\n  async checkPassword(aPassword: string): Promise {\n    try {\n      return await bcrypt.compare(aPassword, this.password);\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersInput.html":{"url":"classes/UsersInput.html","title":"class - UsersInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/get-users.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 25})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationInput:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 1})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationInput:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport {\n  PaginationInput,\n  PaginationOutput,\n} from '@server/common/pagination.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class UsersInput extends PaginationInput {}\n\n@ObjectType()\nexport class UsersOutput extends PaginationOutput {\n  @Field(() => [User], { nullable: true })\n  results?: User[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/module/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { Logging } from '@server/entities/logging.entity';\nimport { UsersResolver } from '@server/module/users/users.resolver';\nimport { UsersService } from '@server/module/users/users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Logging, User])],\n  providers: [UsersResolver, UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersOutput.html":{"url":"classes/UsersOutput.html","title":"class - UsersOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/get-users.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                results\n                            \n                            \n                                    Optional\n                                totalPages\n                            \n                            \n                                    Optional\n                                totalResults\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/module/users/dtos/get-users.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport {\n  PaginationInput,\n  PaginationOutput,\n} from '@server/common/pagination.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class UsersInput extends PaginationInput {}\n\n@ObjectType()\nexport class UsersOutput extends PaginationOutput {\n  @Field(() => [User], { nullable: true })\n  results?: User[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/users.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/users/users.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserInput: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/server/module/users/users.resolver.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserInput\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers(usersInput: UsersInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/server/module/users/users.resolver.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usersInput\n                                    \n                                                UsersInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@server/entities/user.entity';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { UseInterceptors } from '@nestjs/common';\nimport { UsersService } from '@server/module/users/users.service';\nimport {\n  CreateUserInput,\n  CreateUserOutput,\n} from '@server/module/users/dtos/create-user.dto';\nimport { UsersInput, UsersOutput } from '@server/module/users/dtos/get-users';\nimport { LoggingInterceptor } from '@server/module/logging/logging.interceptor';\n\n@UseInterceptors(LoggingInterceptor)\n@Resolver(() => User)\nexport class UsersResolver {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Mutation(() => CreateUserOutput)\n  createUser(\n    @Args('input') createUserInput: CreateUserInput,\n  ): Promise {\n    return this.usersService.createUser(createUserInput);\n  }\n\n  @Query(() => UsersOutput)\n  getUsers(@Args('input') usersInput: UsersInput): Promise {\n    return this.usersService.getUsers(usersInput);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(undefined: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/server/module/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(undefined: UsersInput)\n                \n            \n\n\n            \n                \n                    Defined in src/server/module/users/users.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UsersInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '@server/entities/user.entity';\nimport {\n  CreateUserInput,\n  CreateUserOutput,\n} from '@server/module/users/dtos/create-user.dto';\nimport { UsersInput, UsersOutput } from '@server/module/users/dtos/get-users';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async createUser({\n    email,\n    password,\n  }: CreateUserInput): Promise {\n    try {\n      // 유저 존재 여부 확인.\n      const exists = await this.userRepository.findOne({ email });\n      if (exists) {\n        throw new ConflictException({\n          ok: false,\n          error: '이미 가입된 이메일입니다.',\n        });\n      }\n\n      // 유저 생성\n      await this.userRepository.save(\n        this.userRepository.create({ email, password }),\n      );\n      return { ok: true };\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n\n      throw new InternalServerErrorException({\n        ok: false,\n        error: '유저 생성에 실패했습니다.',\n      });\n    }\n  }\n\n  async getUsers({ page, limit }: UsersInput): Promise {\n    try {\n      const [users, totalResults] = await this.userRepository.findAndCount({\n        skip: (page - 1) * limit,\n        take: limit,\n        order: {\n          createdAt: 'ASC',\n        },\n      });\n\n      return {\n        ok: true,\n        results: users,\n        totalPages: Math.ceil(totalResults / limit),\n        totalResults,\n      };\n    } catch {\n      throw new InternalServerErrorException({\n        ok: false,\n        error: '유저를 가져우는데 실패했습니다.',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ViewController.html":{"url":"controllers/ViewController.html","title":"controller - ViewController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ViewController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/view/view.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                assets\n                            \n                            \n                                    Async\n                                handler\n                            \n                            \n                                    Public\n                                    Async\n                                showHome\n                            \n                            \n                                    Public\n                                    Async\n                                showIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            assets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assets(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('_next*')\n                \n            \n\n            \n                \n                    Defined in src/server/view/view.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(req: Request, res: Response, serverSideProps?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/server/view/view.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    serverSideProps\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            showHome\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showHome(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('home')\n                \n            \n\n            \n                \n                    Defined in src/server/view/view.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            showIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showIndex(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/server/view/view.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res, Req } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\nimport { ViewService } from './view.service';\n\n@Controller('/')\nexport class ViewController {\n  constructor(private viewService: ViewService) {}\n\n  async handler(\n    req: Request,\n    res: Response,\n    serverSideProps?: { [key: string]: any },\n  ) {\n    await this.viewService\n      .getNextServer()\n      .render(\n        req,\n        res,\n        req.url,\n        Object.assign(req.query, serverSideProps || {}),\n      );\n  }\n\n  @Get()\n  public async showIndex(@Req() req: Request, @Res() res: Response) {\n    await this.handler(req, res);\n  }\n\n  @Get('home')\n  public async showHome(@Req() req: Request, @Res() res: Response) {\n    const serverSideProps = { name: 'clianor' };\n    await this.handler(req, res, serverSideProps);\n  }\n\n  @Get('_next*')\n  public async assets(@Req() req: Request, @Res() res: Response) {\n    await this.handler(req, res);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewModule.html":{"url":"modules/ViewModule.html","title":"module - ViewModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nViewService\n\nViewService\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/view/view.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ViewService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ViewController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ViewController } from './view.controller';\nimport { ViewService } from './view.service';\n\n@Module({\n  imports: [],\n  providers: [ViewService],\n  controllers: [ViewController],\n})\nexport class ViewModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewService.html":{"url":"injectables/ViewService.html","title":"injectable - ViewService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/view/view.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextServer\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/server/view/view.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNextServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetNextServer()\n                \n            \n\n\n            \n                \n                    Defined in src/server/view/view.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NextServer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/server/view/view.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NextServer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/view/view.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport createServer from 'next';\nimport { NextServer } from 'next/dist/server/next';\n\n@Injectable()\nexport class ViewService implements OnModuleInit {\n  private server: NextServer;\n\n  constructor(private configService: ConfigService) {}\n\n  async onModuleInit(): Promise {\n    try {\n      this.server = createServer({\n        dev: this.configService.get('NODE_ENV') !== 'production',\n        dir: './src/client',\n      });\n      await this.server.prepare();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getNextServer(): NextServer {\n    return this.server;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/server/common/core.dto.ts\n            \n            class\n            CoreOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/common/core.entity.ts\n            \n            class\n            CoreEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/server/common/pagination.dto.ts\n            \n            class\n            PaginationInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/common/pagination.dto.ts\n            \n            class\n            PaginationOutput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/server/entities/logging.entity.ts\n            \n            class\n            Logging\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/server/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/server/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server/module/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/server/module/auth/dtos/login.dto.ts\n            \n            class\n            LoginInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server/module/auth/dtos/login.dto.ts\n            \n            class\n            LoginOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/logging/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/get-users.ts\n            \n            class\n            UsersInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/get-users.ts\n            \n            class\n            UsersOutput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/server/module/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/server/module/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/server/view/view.controller.ts\n            \n            controller\n            ViewController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/server/view/view.service.ts\n            \n            injectable\n            ViewService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/graphql : ^7.11.0\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            apollo-server-express : ^2.25.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            express-mysql-session : ^2.1.6\n        \n            express-session : ^1.17.2\n        \n            graphql : ^15.5.0\n        \n            graphql-tools : ^7.0.5\n        \n            joi : ^17.4.0\n        \n            mysql2 : ^2.2.5\n        \n            next : ^10.2.3\n        \n            react : ^17.0.2\n        \n            react-dom : ^17.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nAppModule->MainModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nViewModule\n\nViewModule\n\nMainModule -->\n\nViewModule->MainModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nViewService\n\nViewService\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
