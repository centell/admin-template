var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.781,1,1.698]],["body/modules/AppModule.html",[0,1.079,1,3.023,2,1.008,3,1.008,4,1.228,5,1.228,6,1.228,7,1.228,8,1.228,9,2.013,10,2.013,11,2.858,12,0.037,13,2.858,14,1.789,15,1.228,16,1.228,17,0.208,18,0.173,19,0.173,20,2.432,21,1.988,22,0.461,23,2.931,24,0.76,25,2.432,26,1.737,27,2.432,28,0.463,29,1.737,30,1.228,31,0.674,32,0.628,33,2.432,34,2.432,35,2.432,36,2.432,37,1.305,38,2.432,39,2.432,40,2.432,41,4.878,42,3.483,43,2.432,44,2.432,45,2.432,46,2.432,47,2.432,48,2.013,49,2.432,50,3.542,51,2.432,52,2.432,53,4.878,54,2.432,55,2.432,56,2.432,57,2.432,58,2.432,59,2.432,60,2.432,61,0.369,62,2.013,63,2.432,64,2.432,65,2.432,66,2.432,67,2.432,68,1.008,69,2.432,70,2.432,71,2.432,72,2.432,73,2.432,74,2.432,75,2.432,76,2.432,77,2.432,78,2.432,79,2.432,80,2.432,81,2.432,82,2.432,83,0.208,84,0.168,85,0.014,86,0.021,87,0.014]],["title/modules/AuthModule.html",[0,0.781,11,1.698]],["body/modules/AuthModule.html",[0,1.273,2,1.374,3,1.374,4,1.674,5,1.674,6,1.674,7,2.489,8,2.489,11,3.214,12,0.036,14,2.219,15,1.674,16,1.674,17,0.284,18,0.235,19,0.235,21,1.861,22,0.468,24,1.036,29,2.367,30,1.674,31,0.631,32,0.856,83,0.284,84,0.229,85,0.019,86,0.026,87,0.019,88,2.744,89,2.744,90,2.744,91,3.045,92,3.316,93,2.765,94,3.316,95,2.744,96,2.744]],["title/classes/AuthResolver.html",[84,0.209,93,1.903]],["body/classes/AuthResolver.html",[12,0.036,17,0.272,18,0.225,19,0.225,22,0.442,28,0.604,31,0.812,32,0.819,61,0.648,83,0.272,84,0.219,85,0.019,86,0.025,87,0.019,91,2.798,93,2.684,95,2.625,97,0.742,98,2.625,99,0.541,100,1.948,101,3.531,102,1.78,103,3.172,104,0.902,105,3.172,106,1.948,107,1.948,108,1.212,109,3.172,110,2.798,111,0.901,112,2.625,113,3.172,114,1.448,115,2.154,116,2.625,117,3.531,118,3.531,119,2.154,120,2.625,121,1.995,122,1.995,123,3.172,124,1.602,125,3.172]],["title/injectables/AuthService.html",[91,1.527,126,1.381]],["body/injectables/AuthService.html",[12,0.037,17,0.184,18,0.152,19,0.152,22,0.417,24,0.67,28,0.409,30,1.084,31,0.822,32,0.554,37,0.67,61,0.589,68,1.338,83,0.184,84,0.148,85,0.013,86,0.019,87,0.013,91,1.63,99,0.366,100,1.474,101,3.212,102,1.813,104,0.821,106,1.474,107,1.474,108,0.918,110,2.18,114,0.98,115,1.63,119,1.084,120,1.776,122,1.35,124,1.084,126,1.474,127,1.35,128,1.776,129,1.008,130,3.306,131,3.212,132,2.179,133,1.776,134,3.083,135,4.318,136,3.229,137,2.672,138,2.146,139,2.146,140,3.229,141,2.672,142,2.146,143,2.305,144,3.229,145,3.882,146,1.776,147,1.205,148,1.776,149,2.146,150,2.146,151,2.146,152,1.474,153,1.35,154,3.229,155,3.306,156,2.717,157,2.114,158,3.083,159,1.902,160,2.305,161,1.813,162,1.776,163,1.776,164,1.532,165,3.229,166,2.146,167,1.35,168,1.776]],["title/classes/CoreEntity.html",[84,0.209,169,1.903]],["body/classes/CoreEntity.html",[12,0.036,17,0.253,18,0.209,19,0.209,22,0.398,28,0.562,61,0.76,83,0.253,84,0.28,85,0.017,86,0.024,87,0.017,97,0.691,99,0.503,104,1.058,111,1.422,129,1.268,147,1.656,164,3.316,169,2.922,170,2.442,171,3.316,172,3.844,173,3.844,174,4.754,175,2.442,176,2.951,177,2.442,178,2.951,179,2.345,180,2.442,181,2.951,182,2.442,183,2.951,184,2.396,185,1.268,186,5.004,187,4.062,188,2.106,189,4.062,190,4.062,191,4.062,192,4.062,193,2.442]],["title/classes/CoreOutput.html",[84,0.209,194,1.038]],["body/classes/CoreOutput.html",[12,0.036,17,0.306,18,0.253,19,0.253,22,0.306,28,0.679,37,1.44,61,0.7,83,0.306,84,0.246,85,0.021,86,0.027,87,0.021,97,0.835,99,0.608,104,0.975,108,1.31,111,1.31,129,1.44,157,2.332,159,1.925,184,2.332,185,1.44,194,1.581,195,2.951,196,2.116,197,2.105,198,2.105,199,3.566,200,2.867,201,3.566]],["title/classes/CreateUserInput.html",[84,0.209,202,1.527]],["body/classes/CreateUserInput.html",[12,0.036,17,0.334,18,0.277,19,0.277,22,0.456,28,0.742,31,0.742,32,1.005,68,1.614,83,0.418,84,0.336,85,0.023,86,0.029,87,0.023,97,0.911,152,1.778,185,1.522,194,1.672,202,2.462,203,2.78,204,2.78,205,1.837,206,2.45,207,2.45,208,1.837,209,2.45,210,1.966]],["title/classes/CreateUserOutput.html",[84,0.209,210,1.527]],["body/classes/CreateUserOutput.html",[12,0.036,17,0.288,18,0.238,19,0.238,22,0.425,28,0.639,31,0.639,32,0.867,37,1.049,61,0.673,68,1.391,83,0.38,84,0.306,85,0.02,86,0.026,87,0.02,97,0.786,99,0.573,104,0.937,108,1.259,111,1.259,129,1.384,152,1.533,157,2.023,159,1.67,185,1.384,194,1.881,196,1.391,197,2.023,198,1.533,200,1.885,202,1.695,203,2.397,204,2.397,205,1.67,206,2.112,207,2.112,208,1.869,209,2.112,210,2.238,211,2.238,212,2.112,213,2.112]],["title/classes/LoginInput.html",[84,0.209,110,1.527]],["body/classes/LoginInput.html",[12,0.036,17,0.335,18,0.278,19,0.278,22,0.457,28,0.745,31,0.745,32,1.01,68,1.622,83,0.419,84,0.337,85,0.023,86,0.029,87,0.023,97,0.916,110,2.469,119,1.976,152,1.787,185,1.527,194,1.677,205,1.843,206,2.462,207,2.462,208,1.843,209,2.462,214,2.794]],["title/classes/LoginOutput.html",[84,0.209,119,1.527]],["body/classes/LoginOutput.html",[12,0.036,17,0.289,18,0.239,19,0.239,22,0.426,28,0.642,31,0.642,32,0.87,37,1.053,61,0.674,68,1.397,83,0.381,84,0.307,85,0.02,86,0.026,87,0.02,97,0.789,99,0.575,104,0.94,108,1.263,110,1.702,111,1.263,119,2.244,129,1.388,152,1.539,157,2.029,159,1.674,185,1.388,194,1.884,196,1.397,197,2.029,198,1.539,200,1.893,205,1.674,206,2.121,207,2.121,208,1.873,209,2.121,211,2.244,212,2.121,213,2.121,214,2.407]],["title/modules/MainModule.html",[0,0.781,215,1.903]],["body/modules/MainModule.html",[0,1.316,1,3.211,2,1.471,3,1.471,4,1.793,5,1.793,6,1.793,7,1.793,8,1.793,12,0.036,14,2.321,15,1.793,16,1.793,17,0.304,18,0.252,19,0.252,21,2.58,22,0.437,24,1.109,83,0.304,84,0.245,85,0.021,86,0.027,87,0.021,215,3.712,216,2.938,217,2.938,218,3.211,219,3.55,220,3.55,221,3.55]],["title/classes/PaginationInput.html",[84,0.209,222,1.527]],["body/classes/PaginationInput.html",[12,0.037,17,0.262,18,0.217,19,0.217,22,0.357,28,0.583,37,1.301,61,0.632,83,0.357,84,0.287,85,0.018,86,0.024,87,0.018,97,0.717,99,0.522,104,0.881,111,1.184,129,1.301,179,2.77,184,2.428,185,1.301,194,1.429,197,1.903,198,1.903,205,1.57,208,1.154,222,2.104,223,2.187,224,2.979,225,2.979,226,3.629,227,2.975,228,3.063,229,2.339,230,3.063,231,4.4,232,2.535,233,1.547,234,1.927,235,1.927]],["title/classes/PaginationOutput.html",[84,0.209,233,1.527]],["body/classes/PaginationOutput.html",[12,0.037,17,0.232,18,0.193,19,0.193,22,0.328,28,0.516,37,1.589,61,0.732,83,0.328,84,0.264,85,0.016,86,0.022,87,0.016,97,0.635,99,0.462,104,1.02,108,1.501,111,1.371,129,1.196,157,1.749,159,1.443,179,2.667,184,2.323,185,1.196,194,1.745,196,1.124,197,2.203,198,2.323,200,1.522,205,1.443,208,1.443,211,1.934,212,1.706,213,1.706,222,1.369,223,1.936,224,1.706,225,1.706,226,2.734,227,1.936,229,1.522,231,4.211,232,2.244,233,1.934,234,2.793,235,2.793,236,2.712,237,2.712]],["title/classes/User.html",[31,0.576,84,0.209]],["body/classes/User.html",[12,0.037,17,0.176,18,0.146,19,0.146,22,0.41,24,0.641,28,0.391,31,0.595,37,0.975,61,0.755,68,1.566,83,0.176,84,0.215,85,0.012,86,0.018,87,0.012,97,0.481,99,0.35,100,1.426,104,1.084,106,0.938,107,0.938,108,0.583,111,1.413,114,1.426,115,2.132,124,1.037,129,0.975,132,2.685,143,2.698,147,1.153,152,1.725,153,1.964,155,2.229,156,1.964,158,2.229,159,1.177,161,1.753,163,1.699,164,2.229,167,1.964,169,3.128,171,2.229,172,2.584,173,2.584,174,3.127,175,1.699,177,1.699,179,1.037,180,1.699,182,1.699,184,1.725,185,0.975,188,1.466,196,2.175,205,0.774,208,1.177,211,2.132,238,1.699,239,3.123,240,4.222,241,2.053,242,2.053,243,2.053,244,2.053,245,2.053,246,2.053,247,2.053,248,2.053,249,3.123,250,2.053,251,2.053,252,2.053,253,2.053,254,2.053,255,3.123,256,3.123,257,3.123,258,3.123,259,3.778,260,3.123,261,2.053,262,1.699,263,2.053,264,2.053,265,3.778,266,2.053,267,2.053,268,2.584,269,2.053]],["title/classes/UsersInput.html",[84,0.209,270,1.527]],["body/classes/UsersInput.html",[12,0.036,17,0.277,18,0.23,19,0.23,22,0.417,28,0.616,31,0.927,32,0.835,37,1.01,61,0.656,83,0.371,84,0.298,85,0.019,86,0.025,87,0.025,97,0.757,99,0.552,104,0.915,111,1.229,129,1.35,179,2.183,184,1.974,185,1.35,197,1.974,198,1.477,205,1.629,208,1.835,211,2.183,222,2.735,224,2.72,225,2.72,226,3.087,227,2.31,229,1.816,233,2.183,270,2.183,271,2.31,272,2.31,273,3.236,274,3.236,275,2.678,276,1.634]],["title/modules/UsersModule.html",[0,0.781,13,1.698]],["body/modules/UsersModule.html",[0,1.273,2,1.374,3,1.374,4,1.674,5,1.674,6,1.674,7,2.489,8,2.489,12,0.036,13,3.214,14,2.219,15,1.674,16,1.674,17,0.284,18,0.235,19,0.235,21,1.861,22,0.468,24,1.036,29,2.367,30,1.674,31,0.631,32,0.856,83,0.284,84,0.229,85,0.019,86,0.026,87,0.019,96,2.744,277,2.744,278,2.744,279,2.744,280,3.045,281,3.316,282,2.765,283,3.316,284,2.744]],["title/classes/UsersOutput.html",[84,0.209,276,1.527]],["body/classes/UsersOutput.html",[12,0.036,17,0.213,18,0.176,19,0.176,22,0.362,28,0.473,31,0.883,32,0.642,37,1.602,61,0.803,83,0.308,84,0.248,85,0.015,86,0.021,87,0.027,97,0.582,99,0.424,104,1.119,108,1.593,111,1.503,129,1.124,157,2.117,159,1.747,179,1.817,184,1.643,185,1.124,194,1.234,196,1.491,197,2.416,198,2.342,200,2.02,205,1.356,208,1.594,211,2.59,212,1.563,213,1.563,222,1.817,233,2.671,234,2.263,235,2.263,270,1.255,271,2.569,272,1.774,275,2.056,276,1.817,285,2.485,286,2.485,287,2.485,288,2.485,289,2.485]],["title/classes/UsersResolver.html",[84,0.209,282,1.903]],["body/classes/UsersResolver.html",[12,0.037,17,0.234,18,0.194,19,0.194,22,0.437,28,0.52,31,0.733,32,0.705,61,0.676,83,0.234,84,0.188,85,0.016,86,0.023,87,0.016,97,0.639,99,0.466,100,1.757,102,1.532,104,0.943,106,2.035,107,2.035,108,1.266,111,1.093,112,2.259,114,1.757,115,2.443,116,2.259,117,3.184,118,3.184,121,1.717,122,1.717,124,1.943,202,2.672,210,1.943,270,2.672,276,1.943,280,2.672,282,2.421,284,2.259,290,2.259,291,3.688,292,3.184,293,2.73,294,2.73,295,2.73,296,2.73,297,2.73,298,2.73,299,2.73,300,3.848,301,2.259,302,2.259,303,2.259,304,2.259,305,2.73,306,2.73,307,2.73,308,2.73]],["title/injectables/UsersService.html",[126,1.381,280,1.527]],["body/injectables/UsersService.html",[12,0.037,17,0.172,18,0.142,19,0.142,22,0.406,24,0.625,30,1.011,31,0.381,32,0.517,37,0.957,61,0.565,68,1.269,83,0.172,84,0.138,85,0.012,86,0.018,87,0.018,99,0.341,100,1.399,102,1.719,104,0.787,106,1.699,107,1.699,108,1.057,114,1.399,115,2.104,122,1.259,124,1.547,126,1.399,127,1.259,130,1.429,132,2.659,133,1.657,134,2.975,137,2.535,141,2.535,143,2.656,146,1.657,147,1.124,148,1.657,152,1.699,153,1.927,155,2.975,156,2.34,157,2.051,158,2.656,159,1.785,160,2.187,161,2.088,162,1.657,167,1.927,168,1.657,171,1.429,202,2.104,210,1.011,224,2.621,225,1.927,229,1.124,234,1.259,235,1.927,270,2.104,276,1.011,280,1.547,291,3.079,292,3.079,301,1.657,302,1.657,303,1.657,304,3.079,309,1.657,310,2.002,311,2.002,312,2.002,313,2.002,314,2.002,315,3.063,316,3.063,317,2.002,318,2.002,319,2.002,320,2.002,321,2.002,322,2.002,323,2.002,324,2.002]],["title/controllers/ViewController.html",[325,1.903,326,1.903]],["body/controllers/ViewController.html",[12,0.036,17,0.179,18,0.148,19,0.148,22,0.327,24,0.651,61,0.73,83,0.179,84,0.144,85,0.012,86,0.019,87,0.012,99,0.356,100,1.443,104,0.9,106,1.943,107,2.088,108,1.209,111,1.084,114,1.943,121,1.312,132,3.107,160,1.489,161,2.389,196,0.864,325,1.987,326,1.987,327,1.726,328,1.726,329,2.085,330,5.271,331,3.159,332,3.814,333,3.159,334,3.159,335,2.085,336,5.601,337,5.89,338,5.601,339,3.159,340,2.085,341,5.374,342,2.085,343,4.812,344,3.159,345,2.085,346,2.085,347,2.085,348,3.159,349,2.085,350,2.085,351,2.085,352,1.726,353,1.926,354,1.726,355,2.085,356,2.085,357,1.726,358,2.085,359,2.085,360,2.085,361,2.085,362,3.814,363,2.085,364,2.085,365,2.085]],["title/modules/ViewModule.html",[0,0.781,218,1.698]],["body/modules/ViewModule.html",[0,1.321,2,1.484,3,1.484,4,1.809,5,1.809,6,1.809,7,2.584,8,1.809,12,0.036,14,2.334,15,1.809,16,1.809,17,0.307,18,0.254,19,0.254,21,2.011,22,0.439,24,1.119,83,0.307,84,0.247,85,0.021,86,0.027,87,0.021,218,3.218,326,3.22,327,3.826,353,2.895,354,2.964,366,2.964,367,2.964,368,3.582,369,3.582]],["title/injectables/ViewService.html",[126,1.381,353,1.527]],["body/injectables/ViewService.html",[12,0.036,17,0.245,18,0.203,19,0.203,22,0.423,24,0.892,26,2.039,42,2.039,61,0.603,83,0.245,84,0.197,85,0.017,86,0.023,87,0.017,99,0.487,100,1.813,102,1.603,104,1.044,106,1.304,107,1.304,108,0.812,114,1.813,115,2.005,121,1.797,124,1.442,126,1.813,127,1.797,129,1.24,130,3.26,132,2.563,153,1.797,159,1.076,161,1.603,167,1.797,268,2.364,353,2.005,357,4.084,370,2.364,371,3.26,372,5.369,373,2.856,374,5.369,375,3.971,376,2.856,377,5.187,378,2.856,379,3.971,380,2.364,381,2.856,382,2.856,383,3.971,384,2.856,385,2.856,386,2.856,387,2.856,388,2.856]],["title/coverage.html",[389,2.95]],["body/coverage.html",[0,0.707,12,0.036,19,0.194,31,0.522,61,0.416,84,0.406,85,0.016,86,0.023,87,0.016,91,1.383,93,1.723,98,2.267,110,1.383,119,1.383,126,2.038,128,2.267,156,1.723,169,1.723,170,2.267,194,0.94,195,2.267,202,1.383,203,2.754,204,2.754,210,1.383,214,2.754,222,1.383,223,2.754,233,1.383,238,2.267,270,1.383,271,2.754,272,2.754,276,1.383,280,1.383,282,1.723,290,2.267,309,2.267,325,1.723,326,1.723,328,2.267,353,1.383,370,2.267,389,1.956,390,2.739,391,2.739,392,2.739,393,2.267,394,3.857,395,2.267,396,6.075,397,4.846,398,5.298,399,4.846,400,2.739,401,2.267,402,4.464,403,2.739,404,2.739,405,2.739]],["title/dependencies.html",[3,1.508,406,2.524]],["body/dependencies.html",[3,1.346,12,0.037,23,2.689,24,1.015,26,2.319,28,0.619,30,1.64,62,2.689,84,0.299,85,0.019,86,0.025,87,0.019,131,3.588,147,1.824,188,2.319,262,2.689,352,4.309,371,2.319,380,2.689,407,4.88,408,3.249,409,3.249,410,3.249,411,3.249,412,3.249,413,3.249,414,3.249,415,3.249,416,3.249,417,3.249,418,3.249,419,3.249,420,3.249,421,4.336,422,3.249,423,3.249,424,3.249,425,3.249,426,3.249,427,3.249,428,3.249,429,4.336,430,4.336,431,3.249,432,3.249,433,3.249,434,3.249,435,3.249,436,3.249,437,3.249,438,3.249,439,3.249]],["title/index.html",[99,0.43,440,2.524,441,2.524]],["body/index.html",[12,0.036,18,0.221,42,2.221,48,2.574,85,0.018,86,0.025,87,0.018,134,2.221,371,2.221,389,2.221,442,3.11,443,3.11,444,4.211,445,3.11,446,3.11,447,3.11,448,3.11,449,3.11,450,3.11,451,4.774,452,3.11,453,3.11,454,3.11,455,5.635,456,3.11,457,3.11,458,5.51,459,3.11,460,3.11,461,4.211,462,3.11,463,3.11,464,3.11,465,4.211,466,4.211,467,3.11,468,3.11,469,3.11,470,4.211,471,4.211,472,3.11,473,3.11,474,3.11,475,3.11,476,3.11,477,2.574,478,3.11,479,3.11,480,3.11,481,3.11,482,3.11,483,3.11,484,3.11,485,3.11,486,3.11,487,3.11,488,3.11,489,3.11,490,3.11,491,3.11,492,3.11,493,3.11,494,3.11,495,3.11]],["title/modules.html",[2,1.712]],["body/modules.html",[1,2.345,2,1.731,11,2.345,12,0.03,13,2.345,85,0.025,86,0.03,87,0.025,215,2.628,218,2.345,477,4.85,496,5.86,497,5.86,498,5.86]],["title/overview.html",[499,3.419]],["body/overview.html",[0,0.816,1,3.176,2,1.309,3,1.309,4,1.595,5,1.595,6,1.595,7,1.595,8,1.595,9,2.615,10,2.615,11,3.107,12,0.035,13,3.107,14,2.149,15,1.595,16,1.595,85,0.019,86,0.025,87,0.019,88,2.615,89,2.615,90,2.615,91,2.857,97,0.739,127,1.988,215,3.482,216,2.615,217,2.615,218,3.017,229,1.773,277,2.615,278,2.615,279,2.615,280,2.857,325,1.988,353,2.43,366,2.615,367,2.615,499,2.615,500,3.159,501,3.159,502,3.159]],["title/miscellaneous/variables.html",[503,2.089,504,3.011]],["body/miscellaneous/variables.html",[0,1.34,12,0.035,61,0.788,85,0.025,86,0.03,87,0.025,99,0.735,193,3.569,196,1.787,393,3.569,395,4.608,401,3.569,503,3.569,504,3.569,505,4.313,506,4.313,507,4.313]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":229,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["1.17.2",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":267,"title":{},"body":{"classes/User.html":{}}}],["10.2.3",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":502,"title":{},"body":{"overview.html":{}}}],["15.5.0",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["17.0.2",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["17.4.0",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["2.1.6",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["2.25.1",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":227,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{}}}],["3",{"_index":501,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":500,"title":{},"body":{"overview.html":{}}}],["6.6.6",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["7.0.5",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["7.11.0",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":478,"title":{},"body":{"index.html":{}}}],["apassword",{"_index":251,"title":{},"body":{"classes/User.html":{}}}],["apollo",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":457,"title":{},"body":{"index.html":{}}}],["applications",{"_index":449,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":116,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["args('input",{"_index":305,"title":{},"body":{"classes/UsersResolver.html":{}}}],["asc",{"_index":323,"title":{},"body":{"injectables/UsersService.html":{}}}],["assets",{"_index":331,"title":{},"body":{"controllers/ViewController.html":{}}}],["assets(@req",{"_index":365,"title":{},"body":{"controllers/ViewController.html":{}}}],["assets(req",{"_index":335,"title":{},"body":{"controllers/ViewController.html":{}}}],["async",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":488,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":93,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":91,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["backers",{"_index":479,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":261,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.compare(apassword",{"_index":269,"title":{},"body":{"classes/User.html":{}}}],["bcrypt.hash(this.password",{"_index":266,"title":{},"body":{"classes/User.html":{}}}],["bcryptjs",{"_index":262,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["beforeinsert",{"_index":257,"title":{},"body":{"classes/User.html":{}}}],["beforeinsert()@beforeupdate",{"_index":252,"title":{},"body":{"classes/User.html":{}}}],["beforeupdate",{"_index":258,"title":{},"body":{"classes/User.html":{}}}],["boolean",{"_index":200,"title":{},"body":{"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["browse",{"_index":498,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":496,"title":{},"body":{"modules.html":{}}}],["building",{"_index":445,"title":{},"body":{"index.html":{}}}],["catch",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["checkpassword",{"_index":239,"title":{},"body":{"classes/User.html":{}}}],["checkpassword(apassword",{"_index":249,"title":{},"body":{"classes/User.html":{}}}],["class",{"_index":84,"title":{"classes/AuthResolver.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":97,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["clianor",{"_index":364,"title":{},"body":{"controllers/ViewController.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":216,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":217,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":277,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":279,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":278,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_viewmodule",{"_index":366,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["cluster_viewmodule_providers",{"_index":367,"title":{},"body":{"modules/ViewModule.html":{},"overview.html":{}}}],["column",{"_index":259,"title":{},"body":{"classes/User.html":{}}}],["configmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":374,"title":{},"body":{"injectables/ViewService.html":{}}}],["conflictexception",{"_index":315,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(error",{"_index":268,"title":{},"body":{"classes/User.html":{},"injectables/ViewService.html":{}}}],["const",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{}}}],["constructor",{"_index":102,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["constructor(authservice",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(configservice",{"_index":373,"title":{},"body":{"injectables/ViewService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["constructor(userrepository",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":293,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["context.req.session",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":325,"title":{"controllers/ViewController.html":{}},"body":{"controllers/ViewController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":327,"title":{},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{}}}],["core.dto",{"_index":232,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{}}}],["coreentity",{"_index":169,"title":{"classes/CoreEntity.html":{}},"body":{"classes/CoreEntity.html":{},"classes/User.html":{},"coverage.html":{}}}],["coreentity:15",{"_index":247,"title":{},"body":{"classes/User.html":{}}}],["coreentity:20",{"_index":245,"title":{},"body":{"classes/User.html":{}}}],["coreentity:25",{"_index":248,"title":{},"body":{"classes/User.html":{}}}],["coreentity:30",{"_index":246,"title":{},"body":{"classes/User.html":{}}}],["coreoutput",{"_index":194,"title":{"classes/CoreOutput.html":{}},"body":{"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["coreoutput:6",{"_index":212,"title":{},"body":{"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{}}}],["coreoutput:9",{"_index":213,"title":{},"body":{"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{}}}],["coverage",{"_index":389,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":171,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["createdatecolumn",{"_index":189,"title":{},"body":{"classes/CoreEntity.html":{}}}],["createserver",{"_index":379,"title":{},"body":{"injectables/ViewService.html":{}}}],["createuser",{"_index":291,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserinput",{"_index":295,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(undefined",{"_index":311,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserinput",{"_index":202,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuseroutput",{"_index":210,"title":{"classes/CreateUserOutput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["database",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":174,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{}}}],["db_host",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["db_name",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["db_password",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["db_port",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["db_username",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["debug",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["decorators",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"controllers/ViewController.html":{}}}],["default",{"_index":193,"title":{},"body":{"classes/CoreEntity.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["default_db_connection",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":226,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{}}}],["defined",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["deletedat",{"_index":172,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{}}}],["deletedatecolumn",{"_index":190,"title":{},"body":{"classes/CoreEntity.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":450,"title":{},"body":{"index.html":{}}}],["dev",{"_index":384,"title":{},"body":{"injectables/ViewService.html":{}}}],["development",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["dir",{"_index":386,"title":{},"body":{"injectables/ViewService.html":{}}}],["documentation",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":467,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":446,"title":{},"body":{"index.html":{}}}],["email",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":260,"title":{},"body":{"classes/User.html":{}}}],["env",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["exists",{"_index":316,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["express",{"_index":352,"title":{},"body":{"controllers/ViewController.html":{},"dependencies.html":{}}}],["extends",{"_index":208,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["false",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["field",{"_index":184,"title":{},"body":{"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["field(undefined",{"_index":197,"title":{},"body":{"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["framework",{"_index":444,"title":{},"body":{"index.html":{}}}],["get('_next",{"_index":339,"title":{},"body":{"controllers/ViewController.html":{}}}],["get('home",{"_index":348,"title":{},"body":{"controllers/ViewController.html":{}}}],["getnextserver",{"_index":357,"title":{},"body":{"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["getting",{"_index":440,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":292,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["getusers(@args('input",{"_index":307,"title":{},"body":{"classes/UsersResolver.html":{}}}],["getusers(undefined",{"_index":313,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusers(usersinput",{"_index":297,"title":{},"body":{"classes/UsersResolver.html":{}}}],["graphql",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":474,"title":{},"body":{"index.html":{}}}],["handler",{"_index":332,"title":{},"body":{"controllers/ViewController.html":{}}}],["handler(req",{"_index":342,"title":{},"body":{"controllers/ViewController.html":{}}}],["hashpassword",{"_index":240,"title":{},"body":{"classes/User.html":{}}}],["here",{"_index":485,"title":{},"body":{"index.html":{}}}],["host",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["https://nestjs.com",{"_index":492,"title":{},"body":{"index.html":{}}}],["id",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/User.html":{}}}],["identifier",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":382,"title":{},"body":{"injectables/ViewService.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{}}}],["include",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":99,"title":{"index.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{}}}],["inherited",{"_index":211,"title":{},"body":{"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["inject",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(context",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":126,"title":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{},"coverage.html":{}}}],["injectables",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{},"overview.html":{}}}],["injectrepository",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inputtype",{"_index":205,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["inputtype('userinputtype",{"_index":263,"title":{},"body":{"classes/User.html":{}}}],["installation",{"_index":454,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":456,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["int",{"_index":231,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{}}}],["internalservererrorexception",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["isdate",{"_index":186,"title":{},"body":{"classes/CoreEntity.html":{}}}],["isdate()@field(undefined)@createdatecolumn",{"_index":175,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{}}}],["isdate()@field(undefined)@deletedatecolumn",{"_index":177,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{}}}],["isdate()@field(undefined)@updatedatecolumn",{"_index":182,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{}}}],["isemail",{"_index":255,"title":{},"body":{"classes/User.html":{}}}],["isemail()@field(undefined)@column({unique",{"_index":241,"title":{},"body":{"classes/User.html":{}}}],["isglobal",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["isnumber",{"_index":187,"title":{},"body":{"classes/CoreEntity.html":{}}}],["isnumber()@field(undefined)@primarygeneratedcolumn",{"_index":180,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{}}}],["isstring",{"_index":256,"title":{},"body":{"classes/User.html":{}}}],["isstring()@field(undefined)@column({select",{"_index":243,"title":{},"body":{"classes/User.html":{}}}],["joi",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().required",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":481,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":489,"title":{},"body":{"index.html":{}}}],["keepconnectionalive",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["key",{"_index":355,"title":{},"body":{"controllers/ViewController.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["license",{"_index":495,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":471,"title":{},"body":{"index.html":{}}}],["limit",{"_index":224,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":344,"title":{},"body":{"controllers/ViewController.html":{}}}],["logging",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":101,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["login(@args('input",{"_index":123,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(logininput",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(undefined",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["logininput",{"_index":110,"title":{"classes/LoginInput.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"coverage.html":{}}}],["loginoutput",{"_index":119,"title":{"classes/LoginOutput.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"coverage.html":{}}}],["mainmodule",{"_index":215,"title":{"modules/MainModule.html":{}},"body":{"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["matching",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalresults",{"_index":324,"title":{},"body":{"injectables/UsersService.html":{}}}],["metadata",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":100,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["miscellaneous",{"_index":503,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":470,"title":{},"body":{"index.html":{}}}],["mode",{"_index":461,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":484,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":117,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["mysql",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mysql2",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":490,"title":{},"body":{"index.html":{}}}],["name",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["nest",{"_index":451,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":494,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/MainModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/ViewService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":380,"title":{},"body":{"injectables/ViewService.html":{},"dependencies.html":{}}}],["next/dist/server/next",{"_index":381,"title":{},"body":{"injectables/ViewService.html":{}}}],["nextserver",{"_index":377,"title":{},"body":{"injectables/ViewService.html":{}}}],["node.js",{"_index":443,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["notfoundexception",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":455,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":198,"title":{},"body":{"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["number",{"_index":179,"title":{},"body":{"classes/CoreEntity.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["object.assign(req.query",{"_index":360,"title":{},"body":{"controllers/ViewController.html":{}}}],["objecttype",{"_index":185,"title":{},"body":{"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["ok",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["onmoduleinit",{"_index":372,"title":{},"body":{"injectables/ViewService.html":{}}}],["open",{"_index":472,"title":{},"body":{"index.html":{}}}],["optional",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["order",{"_index":322,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["overview",{"_index":499,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":406,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":225,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"injectables/UsersService.html":{}}}],["paginationinput",{"_index":222,"title":{"classes/PaginationInput.html":{}},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["paginationinput:10",{"_index":273,"title":{},"body":{"classes/UsersInput.html":{}}}],["paginationinput:7",{"_index":274,"title":{},"body":{"classes/UsersInput.html":{}}}],["paginationoutput",{"_index":233,"title":{"classes/PaginationOutput.html":{}},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["paginationoutput:16",{"_index":286,"title":{},"body":{"classes/UsersOutput.html":{}}}],["paginationoutput:19",{"_index":287,"title":{},"body":{"classes/UsersOutput.html":{}}}],["paginationoutput:6",{"_index":288,"title":{},"body":{"classes/UsersOutput.html":{}}}],["paginationoutput:9",{"_index":289,"title":{},"body":{"classes/UsersOutput.html":{}}}],["parameters",{"_index":106,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["password",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["passwordcorrect",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["picktype",{"_index":206,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{}}}],["picktype(user",{"_index":209,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{}}}],["playground",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":482,"title":{},"body":{"index.html":{}}}],["port",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":329,"title":{},"body":{"controllers/ViewController.html":{}}}],["primarygeneratedcolumn",{"_index":191,"title":{},"body":{"classes/CoreEntity.html":{}}}],["private",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["private_key",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_port",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/ViewService.html":{},"index.html":{}}}],["progressive",{"_index":442,"title":{},"body":{"index.html":{}}}],["project",{"_index":473,"title":{},"body":{"index.html":{}}}],["promise",{"_index":115,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["properties",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"injectables/ViewService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["public",{"_index":330,"title":{},"body":{"controllers/ViewController.html":{}}}],["query",{"_index":300,"title":{},"body":{"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":298,"title":{},"body":{"classes/UsersResolver.html":{}}}],["react",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":483,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":122,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["record",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["reflect",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["render",{"_index":358,"title":{},"body":{"controllers/ViewController.html":{}}}],["repository",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":341,"title":{},"body":{"controllers/ViewController.html":{}}}],["req.url",{"_index":359,"title":{},"body":{"controllers/ViewController.html":{}}}],["request",{"_index":336,"title":{},"body":{"controllers/ViewController.html":{}}}],["request.credentials",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":337,"title":{},"body":{"controllers/ViewController.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}],["resolver",{"_index":118,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["response",{"_index":338,"title":{},"body":{"controllers/ViewController.html":{}}}],["result",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":124,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["returns",{"_index":114,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{}}}],["rimraf",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":458,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":447,"title":{},"body":{"index.html":{}}}],["select",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["server",{"_index":371,"title":{},"body":{"injectables/ViewService.html":{},"dependencies.html":{},"index.html":{}}}],["server/common/core.dto",{"_index":207,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{}}}],["server/common/core.entity",{"_index":254,"title":{},"body":{"classes/User.html":{}}}],["server/common/pagination.dto",{"_index":275,"title":{},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{}}}],["server/entities/user.entity",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["server/module/app.module",{"_index":220,"title":{},"body":{"modules/MainModule.html":{}}}],["server/module/auth/auth.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["server/module/auth/auth.resolver",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{}}}],["server/module/auth/auth.service",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["server/module/auth/dtos/login.dto",{"_index":120,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["server/module/users/dtos/create",{"_index":301,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["server/module/users/dtos/get",{"_index":303,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["server/module/users/users.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["server/module/users/users.resolver",{"_index":283,"title":{},"body":{"modules/UsersModule.html":{}}}],["server/module/users/users.service",{"_index":284,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["server/view/view.module",{"_index":221,"title":{},"body":{"modules/MainModule.html":{}}}],["serversideprops",{"_index":343,"title":{},"body":{"controllers/ViewController.html":{}}}],["session",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["settings",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["showhome",{"_index":333,"title":{},"body":{"controllers/ViewController.html":{}}}],["showhome(@req",{"_index":363,"title":{},"body":{"controllers/ViewController.html":{}}}],["showhome(req",{"_index":347,"title":{},"body":{"controllers/ViewController.html":{}}}],["showindex",{"_index":334,"title":{},"body":{"controllers/ViewController.html":{}}}],["showindex(@req",{"_index":361,"title":{},"body":{"controllers/ViewController.html":{}}}],["showindex(req",{"_index":350,"title":{},"body":{"controllers/ViewController.html":{}}}],["side",{"_index":448,"title":{},"body":{"index.html":{}}}],["skip",{"_index":320,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"modules/MainModule.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"index.html":{}}}],["sponsors",{"_index":476,"title":{},"body":{"index.html":{}}}],["src/.../common.constants.ts",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/client",{"_index":387,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/server/common/common.constants.ts",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server/common/core.dto.ts",{"_index":195,"title":{},"body":{"classes/CoreOutput.html":{},"coverage.html":{}}}],["src/server/common/core.dto.ts:6",{"_index":199,"title":{},"body":{"classes/CoreOutput.html":{}}}],["src/server/common/core.dto.ts:9",{"_index":201,"title":{},"body":{"classes/CoreOutput.html":{}}}],["src/server/common/core.entity.ts",{"_index":170,"title":{},"body":{"classes/CoreEntity.html":{},"coverage.html":{}}}],["src/server/common/core.entity.ts:15",{"_index":181,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/core.entity.ts:20",{"_index":176,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/core.entity.ts:25",{"_index":183,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/core.entity.ts:30",{"_index":178,"title":{},"body":{"classes/CoreEntity.html":{}}}],["src/server/common/pagination.dto.ts",{"_index":223,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"coverage.html":{}}}],["src/server/common/pagination.dto.ts:10",{"_index":228,"title":{},"body":{"classes/PaginationInput.html":{}}}],["src/server/common/pagination.dto.ts:16",{"_index":236,"title":{},"body":{"classes/PaginationOutput.html":{}}}],["src/server/common/pagination.dto.ts:19",{"_index":237,"title":{},"body":{"classes/PaginationOutput.html":{}}}],["src/server/common/pagination.dto.ts:7",{"_index":230,"title":{},"body":{"classes/PaginationInput.html":{}}}],["src/server/entities/user.entity.ts",{"_index":238,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/server/entities/user.entity.ts:15",{"_index":242,"title":{},"body":{"classes/User.html":{}}}],["src/server/entities/user.entity.ts:20",{"_index":244,"title":{},"body":{"classes/User.html":{}}}],["src/server/entities/user.entity.ts:24",{"_index":253,"title":{},"body":{"classes/User.html":{}}}],["src/server/entities/user.entity.ts:35",{"_index":250,"title":{},"body":{"classes/User.html":{}}}],["src/server/main.module.ts",{"_index":219,"title":{},"body":{"modules/MainModule.html":{}}}],["src/server/main.ts",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server/module/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/server/module/auth/auth.module.ts",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/server/module/auth/auth.resolver.ts",{"_index":98,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/server/module/auth/auth.resolver.ts:11",{"_index":113,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/server/module/auth/auth.resolver.ts:7",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/server/module/auth/auth.service.ts",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/server/module/auth/auth.service.ts:17",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/server/module/auth/auth.service.ts:26",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/server/module/auth/dtos/login.dto.ts",{"_index":214,"title":{},"body":{"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"coverage.html":{}}}],["src/server/module/users/dtos/create",{"_index":203,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"coverage.html":{}}}],["src/server/module/users/dtos/get",{"_index":271,"title":{},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["src/server/module/users/users.module.ts",{"_index":281,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/server/module/users/users.resolver.ts",{"_index":290,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/server/module/users/users.resolver.ts:11",{"_index":294,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/server/module/users/users.resolver.ts:15",{"_index":296,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/server/module/users/users.resolver.ts:22",{"_index":299,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/server/module/users/users.service.ts",{"_index":309,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/server/module/users/users.service.ts:17",{"_index":310,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/server/module/users/users.service.ts:23",{"_index":312,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/server/module/users/users.service.ts:54",{"_index":314,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/server/view/view.controller.ts",{"_index":328,"title":{},"body":{"controllers/ViewController.html":{},"coverage.html":{}}}],["src/server/view/view.controller.ts:10",{"_index":345,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.controller.ts:26",{"_index":351,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.controller.ts:31",{"_index":349,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.controller.ts:37",{"_index":340,"title":{},"body":{"controllers/ViewController.html":{}}}],["src/server/view/view.module.ts",{"_index":368,"title":{},"body":{"modules/ViewModule.html":{}}}],["src/server/view/view.service.ts",{"_index":370,"title":{},"body":{"injectables/ViewService.html":{},"coverage.html":{}}}],["src/server/view/view.service.ts:12",{"_index":378,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/server/view/view.service.ts:24",{"_index":376,"title":{},"body":{"injectables/ViewService.html":{}}}],["src/server/view/view.service.ts:8",{"_index":375,"title":{},"body":{"injectables/ViewService.html":{}}}],["start",{"_index":459,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":462,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":463,"title":{},"body":{"index.html":{}}}],["started",{"_index":441,"title":{"index.html":{}},"body":{}}],["starter",{"_index":453,"title":{},"body":{"index.html":{}}}],["statements",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":486,"title":{},"body":{"index.html":{}}}],["string",{"_index":196,"title":{},"body":{"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersOutput.html":{},"controllers/ViewController.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":477,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":497,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":321,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":466,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":469,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":468,"title":{},"body":{"index.html":{}}}],["tests",{"_index":465,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":475,"title":{},"body":{"index.html":{}}}],["this.authservice.login(logininput",{"_index":125,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.configservice.get('node_env",{"_index":385,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.handler(req",{"_index":362,"title":{},"body":{"controllers/ViewController.html":{}}}],["this.password",{"_index":265,"title":{},"body":{"classes/User.html":{}}}],["this.server",{"_index":383,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.server.prepare",{"_index":388,"title":{},"body":{"injectables/ViewService.html":{}}}],["this.session",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.session.user",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.create",{"_index":318,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findandcount",{"_index":319,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.userrepository.save",{"_index":317,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(createuserinput",{"_index":306,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.getusers(usersinput",{"_index":308,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.viewservice",{"_index":356,"title":{},"body":{"controllers/ViewController.html":{}}}],["throw",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["tools",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["totalpages",{"_index":234,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["totalresults",{"_index":235,"title":{},"body":{"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":487,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"injectables/UsersService.html":{}}}],["try",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/ViewService.html":{}}}],["twitter",{"_index":493,"title":{},"body":{"index.html":{}}}],["type",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/CoreOutput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginOutput.html":{},"classes/PaginationInput.html":{},"classes/PaginationOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"controllers/ViewController.html":{},"injectables/ViewService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"classes/CoreEntity.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":452,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["unique",{"_index":264,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":464,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":173,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":192,"title":{},"body":{"classes/CoreEntity.html":{}}}],["user",{"_index":31,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"classes/LoginInput.html":{},"classes/LoginOutput.html":{},"classes/User.html":{},"classes/UsersInput.html":{},"modules/UsersModule.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.checkpassword(password",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":302,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":204,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/CreateUserOutput.html":{},"coverage.html":{}}}],["username",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":304,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.ts",{"_index":272,"title":{},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"coverage.html":{}}}],["users.ts:14",{"_index":285,"title":{},"body":{"classes/UsersOutput.html":{}}}],["usersinput",{"_index":270,"title":{"classes/UsersInput.html":{}},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":13,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersoutput",{"_index":276,"title":{"classes/UsersOutput.html":{}},"body":{"classes/UsersInput.html":{},"classes/UsersOutput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersresolver",{"_index":282,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":280,"title":{"injectables/UsersService.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid('production",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["validationschema",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":188,"title":{},"body":{"classes/CoreEntity.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":504,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view.controller",{"_index":369,"title":{},"body":{"modules/ViewModule.html":{}}}],["view.service",{"_index":354,"title":{},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{}}}],["viewcontroller",{"_index":326,"title":{"controllers/ViewController.html":{}},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{},"coverage.html":{}}}],["viewmodule",{"_index":218,"title":{"modules/ViewModule.html":{}},"body":{"modules/MainModule.html":{},"modules/ViewModule.html":{},"modules.html":{},"overview.html":{}}}],["viewservice",{"_index":353,"title":{"injectables/ViewService.html":{}},"body":{"controllers/ViewController.html":{},"modules/ViewModule.html":{},"injectables/ViewService.html":{},"coverage.html":{},"overview.html":{}}}],["watch",{"_index":460,"title":{},"body":{"index.html":{}}}],["website",{"_index":491,"title":{},"body":{"index.html":{}}}],["yes",{"_index":346,"title":{},"body":{"controllers/ViewController.html":{}}}],["you'd",{"_index":480,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainModule.html":{},"modules/UsersModule.html":{},"modules/ViewModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/module/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as Joi from 'joi';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { UsersModule } from '@server/module/users/users.module';\nimport { AuthModule } from '@server/module/auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n      ignoreEnvFile: process.env.NODE_ENV === 'production',\n      validationSchema: Joi.object({\n        NODE_ENV: Joi.string()\n          .valid('production', 'development')\n          .default('development'),\n        PORT: Joi.number().default(3000),\n        DB_HOST: Joi.string().required(),\n        DB_PORT: Joi.number().required(),\n        DB_USERNAME: Joi.string().required(),\n        DB_PASSWORD: Joi.string().required(),\n        DB_NAME: Joi.string().required(),\n        PRIVATE_KEY: Joi.string().required(),\n      }),\n    }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST,\n      port: +process.env.DB_PORT,\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      logging: process.env.NODE_ENV !== 'production',\n      synchronize: process.env.NODE_ENV !== 'production',\n      entities: [User],\n      keepConnectionAlive: true,\n    }),\n    GraphQLModule.forRoot({\n      autoSchemaFile: true,\n      debug: process.env.NODE_ENV !== 'production',\n      playground: process.env.NODE_ENV !== 'production' && {\n        settings: {\n          'request.credentials': 'include',\n        },\n      },\n    }),\n    AuthModule,\n    UsersModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/module/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { AuthResolver } from '@server/module/auth/auth.resolver';\nimport { AuthService } from '@server/module/auth/auth.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [AuthResolver, AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/auth.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/auth/auth.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(loginInput: LoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/server/module/auth/auth.resolver.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInput\n                                    \n                                                LoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@server/entities/user.entity';\nimport { Args, Mutation, Resolver } from '@nestjs/graphql';\nimport { AuthService } from '@server/module/auth/auth.service';\nimport { LoginInput, LoginOutput } from '@server/module/auth/dtos/login.dto';\n\n@Resolver(() => User)\nexport class AuthResolver {\n  constructor(private readonly authService: AuthService) {}\n\n  @Mutation(() => LoginOutput)\n  login(@Args('input') loginInput: LoginInput): Promise {\n    return this.authService.login(loginInput);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, context)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginInput)\n                \n            \n\n\n            \n                \n                    Defined in src/server/module/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/module/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { LoginInput, LoginOutput } from '@server/module/auth/dtos/login.dto';\nimport { Repository } from 'typeorm';\nimport { CONTEXT } from '@nestjs/graphql';\n\n@Injectable()\nexport class AuthService {\n  private session: Record;\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @Inject(CONTEXT) private context,\n  ) {\n    this.session = context.req.session;\n  }\n\n  async login({ email, password }: LoginInput): Promise {\n    try {\n      if (this.session.user) {\n        throw new UnauthorizedException({\n          ok: false,\n          error: '이미 로그인되어 있습니다',\n        });\n      }\n\n      const user = await this.userRepository.findOne(\n        {\n          email,\n        },\n        { select: ['id', 'password'] },\n      );\n      if (!user) {\n        throw new NotFoundException({\n          ok: false,\n          error: '유저가 존재하지 않습니다.',\n        });\n      }\n\n      const passwordCorrect = await user.checkPassword(password);\n      if (!passwordCorrect) {\n        throw new UnauthorizedException({\n          ok: false,\n          error: '잘못된 패스워드입니다',\n        });\n      }\n\n      this.session.user = user;\n\n      return { ok: true };\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n      throw new InternalServerErrorException({\n        ok: false,\n        error: '로그인에 실패했습니다.',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreEntity.html":{"url":"classes/CoreEntity.html","title":"class - CoreEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/core.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.entity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { IsDate, IsNumber } from 'class-validator';\nimport {\n  CreateDateColumn,\n  DeleteDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@ObjectType()\nclass CoreEntity {\n  @IsNumber()\n  @Field(() => Number)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @IsDate()\n  @Field(() => Date)\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @IsDate()\n  @Field(() => Date)\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @IsDate()\n  @Field(() => Date)\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\nexport default CoreEntity;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreOutput.html":{"url":"classes/CoreOutput.html","title":"class - CoreOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/core.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/core.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class CoreOutput {\n  @Field(() => String, { nullable: true })\n  error?: string;\n\n  @Field(() => Boolean)\n  ok: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { CoreOutput } from '@server/common/core.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class CreateUserOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserOutput.html":{"url":"classes/CreateUserOutput.html","title":"class - CreateUserOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/create-user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { CoreOutput } from '@server/common/core.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class CreateUserOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInput.html":{"url":"classes/LoginInput.html","title":"class - LoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { User } from '@server/entities/user.entity';\nimport { CoreOutput } from '@server/common/core.dto';\n\n@InputType()\nexport class LoginInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class LoginOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOutput.html":{"url":"classes/LoginOutput.html","title":"class - LoginOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/auth/dtos/login.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, ObjectType, PickType } from '@nestjs/graphql';\nimport { User } from '@server/entities/user.entity';\nimport { CoreOutput } from '@server/common/core.dto';\n\n@InputType()\nexport class LoginInput extends PickType(User, ['email', 'password']) {}\n\n@ObjectType()\nexport class LoginOutput extends CoreOutput {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nAppModule->MainModule\n\n\n\n\n\nViewModule\n\nViewModule\n\nMainModule -->\n\nViewModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                        \n                            ViewModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppModule } from '@server/module/app.module';\nimport { ViewModule } from '@server/view/view.module';\n\n@Module({\n  imports: [AppModule, ViewModule],\n})\nexport class MainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationInput.html":{"url":"classes/PaginationInput.html","title":"class - PaginationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int, ObjectType } from '@nestjs/graphql';\nimport { CoreOutput } from './core.dto';\n\n@InputType()\nexport class PaginationInput {\n  @Field(() => Int, { defaultValue: 1 })\n  page: number;\n\n  @Field(() => Int, { defaultValue: 25 })\n  limit: number;\n}\n\n@ObjectType()\nexport class PaginationOutput extends CoreOutput {\n  @Field(() => Int, { nullable: true })\n  totalPages?: number;\n\n  @Field(() => Int, { nullable: true })\n  totalResults?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationOutput.html":{"url":"classes/PaginationOutput.html","title":"class - PaginationOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/common/pagination.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                totalPages\n                            \n                            \n                                    Optional\n                                totalResults\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/common/pagination.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int, ObjectType } from '@nestjs/graphql';\nimport { CoreOutput } from './core.dto';\n\n@InputType()\nexport class PaginationInput {\n  @Field(() => Int, { defaultValue: 1 })\n  page: number;\n\n  @Field(() => Int, { defaultValue: 25 })\n  limit: number;\n}\n\n@ObjectType()\nexport class PaginationOutput extends CoreOutput {\n  @Field(() => Int, { nullable: true })\n  totalPages?: number;\n\n  @Field(() => Int, { nullable: true })\n  totalResults?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/entities/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CoreEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkPassword\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@Field(undefined)@Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/entities/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@Field(undefined)@Column({select: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/entities/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Field(undefined)@UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreEntity:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkPassword(aPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/server/entities/user.entity.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()@BeforeUpdate()\n                \n            \n\n            \n                \n                    Defined in src/server/entities/user.entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport CoreEntity from '@server/common/core.entity';\nimport { IsEmail, IsString } from 'class-validator';\nimport { BeforeInsert, BeforeUpdate, Column, Entity } from 'typeorm';\nimport * as bcrypt from 'bcryptjs';\nimport { InternalServerErrorException } from '@nestjs/common';\n\n@InputType('UserInputType')\n@ObjectType()\n@Entity()\nexport class User extends CoreEntity {\n  @IsEmail()\n  @Field(() => String)\n  @Column({ unique: true })\n  email: string;\n\n  @IsString()\n  @Field(() => String)\n  @Column({ select: false })\n  password: string;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  async hashPassword(): Promise {\n    if (this.password) {\n      try {\n        this.password = await bcrypt.hash(this.password, 10);\n      } catch (error) {\n        console.log(error);\n        throw new InternalServerErrorException();\n      }\n    }\n  }\n\n  async checkPassword(aPassword: string): Promise {\n    try {\n      return await bcrypt.compare(aPassword, this.password);\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersInput.html":{"url":"classes/UsersInput.html","title":"class - UsersInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/get-users.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 25})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationInput:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {defaultValue: 1})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationInput:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport {\n  PaginationInput,\n  PaginationOutput,\n} from '@server/common/pagination.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class UsersInput extends PaginationInput {}\n\n@ObjectType()\nexport class UsersOutput extends PaginationOutput {\n  @Field(() => [User], { nullable: true })\n  results?: User[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/module/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '@server/entities/user.entity';\nimport { UsersResolver } from '@server/module/users/users.resolver';\nimport { UsersService } from '@server/module/users/users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UsersResolver, UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersOutput.html":{"url":"classes/UsersOutput.html","title":"class - UsersOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/dtos/get-users.ts\n        \n\n\n            \n                Extends\n            \n            \n                        PaginationOutput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                results\n                            \n                            \n                                    Optional\n                                totalPages\n                            \n                            \n                                    Optional\n                                totalResults\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/server/module/users/dtos/get-users.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            totalResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         PaginationOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         PaginationOutput:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         CoreOutput\n\n                                \n                            \n                        \n                            \n                                    Defined in         CoreOutput:9\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport {\n  PaginationInput,\n  PaginationOutput,\n} from '@server/common/pagination.dto';\nimport { User } from '@server/entities/user.entity';\n\n@InputType()\nexport class UsersInput extends PaginationInput {}\n\n@ObjectType()\nexport class UsersOutput extends PaginationOutput {\n  @Field(() => [User], { nullable: true })\n  results?: User[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/users.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/users/users.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserInput: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/server/module/users/users.resolver.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserInput\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers(usersInput: UsersInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/server/module/users/users.resolver.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usersInput\n                                    \n                                                UsersInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@server/entities/user.entity';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { UsersService } from '@server/module/users/users.service';\nimport {\n  CreateUserInput,\n  CreateUserOutput,\n} from '@server/module/users/dtos/create-user.dto';\nimport { UsersInput, UsersOutput } from '@server/module/users/dtos/get-users';\n\n@Resolver(() => User)\nexport class UsersResolver {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Mutation(() => CreateUserOutput)\n  createUser(\n    @Args('input') createUserInput: CreateUserInput,\n  ): Promise {\n    return this.usersService.createUser(createUserInput);\n  }\n\n  @Query(() => UsersOutput)\n  getUsers(@Args('input') usersInput: UsersInput): Promise {\n    return this.usersService.getUsers(usersInput);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/module/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/server/module/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(undefined: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in src/server/module/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(undefined: UsersInput)\n                \n            \n\n\n            \n                \n                    Defined in src/server/module/users/users.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UsersInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  ConflictException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '@server/entities/user.entity';\nimport {\n  CreateUserInput,\n  CreateUserOutput,\n} from '@server/module/users/dtos/create-user.dto';\nimport { UsersInput, UsersOutput } from '@server/module/users/dtos/get-users';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async createUser({\n    email,\n    password,\n  }: CreateUserInput): Promise {\n    try {\n      // 유저 존재 여부 확인.\n      const exists = await this.userRepository.findOne({ email });\n      if (exists) {\n        throw new ConflictException({\n          ok: false,\n          error: '이미 가입된 이메일입니다.',\n        });\n      }\n\n      // 유저 생성\n      await this.userRepository.save(\n        this.userRepository.create({ email, password }),\n      );\n      return { ok: true };\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n\n      throw new InternalServerErrorException({\n        ok: false,\n        error: '유저 생성에 실패했습니다.',\n      });\n    }\n  }\n\n  async getUsers({ page, limit }: UsersInput): Promise {\n    try {\n      const [users, totalResults] = await this.userRepository.findAndCount({\n        skip: (page - 1) * limit,\n        take: limit,\n        order: {\n          createdAt: 'ASC',\n        },\n      });\n\n      return {\n        ok: true,\n        results: users,\n        totalPages: Math.ceil(totalResults / limit),\n        totalResults,\n      };\n    } catch {\n      throw new InternalServerErrorException({\n        ok: false,\n        error: '유저를 가져우는데 실패했습니다.',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ViewController.html":{"url":"controllers/ViewController.html","title":"controller - ViewController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ViewController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/view/view.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                assets\n                            \n                            \n                                    Async\n                                handler\n                            \n                            \n                                    Public\n                                    Async\n                                showHome\n                            \n                            \n                                    Public\n                                    Async\n                                showIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            assets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assets(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('_next*')\n                \n            \n\n            \n                \n                    Defined in src/server/view/view.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(req: Request, res: Response, serverSideProps?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/server/view/view.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    serverSideProps\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            showHome\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showHome(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('home')\n                \n            \n\n            \n                \n                    Defined in src/server/view/view.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            showIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showIndex(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/server/view/view.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res, Req } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\nimport { ViewService } from './view.service';\n\n@Controller('/')\nexport class ViewController {\n  constructor(private viewService: ViewService) {}\n\n  async handler(\n    req: Request,\n    res: Response,\n    serverSideProps?: { [key: string]: any },\n  ) {\n    await this.viewService\n      .getNextServer()\n      .render(\n        req,\n        res,\n        req.url,\n        Object.assign(req.query, serverSideProps || {}),\n      );\n  }\n\n  @Get()\n  public async showIndex(@Req() req: Request, @Res() res: Response) {\n    await this.handler(req, res);\n  }\n\n  @Get('home')\n  public async showHome(@Req() req: Request, @Res() res: Response) {\n    const serverSideProps = { name: 'clianor' };\n    await this.handler(req, res, serverSideProps);\n  }\n\n  @Get('_next*')\n  public async assets(@Req() req: Request, @Res() res: Response) {\n    await this.handler(req, res);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewModule.html":{"url":"modules/ViewModule.html","title":"module - ViewModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nViewService\n\nViewService\n\n\n\nViewModule\n\nViewModule\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server/view/view.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ViewService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ViewController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ViewController } from './view.controller';\nimport { ViewService } from './view.service';\n\n@Module({\n  imports: [],\n  providers: [ViewService],\n  controllers: [ViewController],\n})\nexport class ViewModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewService.html":{"url":"injectables/ViewService.html","title":"injectable - ViewService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/view/view.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextServer\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/server/view/view.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNextServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetNextServer()\n                \n            \n\n\n            \n                \n                    Defined in src/server/view/view.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NextServer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/server/view/view.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NextServer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/view/view.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport createServer from 'next';\nimport { NextServer } from 'next/dist/server/next';\n\n@Injectable()\nexport class ViewService implements OnModuleInit {\n  private server: NextServer;\n\n  constructor(private configService: ConfigService) {}\n\n  async onModuleInit(): Promise {\n    try {\n      this.server = createServer({\n        dev: this.configService.get('NODE_ENV') !== 'production',\n        dir: './src/client',\n      });\n      await this.server.prepare();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getNextServer(): NextServer {\n    return this.server;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/server/common/common.constants.ts\n            \n            variable\n            DEFAULT_DB_CONNECTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server/common/core.dto.ts\n            \n            class\n            CoreOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/common/core.entity.ts\n            \n            class\n            CoreEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/server/common/pagination.dto.ts\n            \n            class\n            PaginationInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/common/pagination.dto.ts\n            \n            class\n            PaginationOutput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/server/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/server/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server/module/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/server/module/auth/dtos/login.dto.ts\n            \n            class\n            LoginInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server/module/auth/dtos/login.dto.ts\n            \n            class\n            LoginOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/get-users.ts\n            \n            class\n            UsersInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server/module/users/dtos/get-users.ts\n            \n            class\n            UsersOutput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/server/module/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/server/module/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/server/view/view.controller.ts\n            \n            controller\n            ViewController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/server/view/view.service.ts\n            \n            injectable\n            ViewService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/graphql : ^7.11.0\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            apollo-server-express : ^2.25.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            express-mysql-session : ^2.1.6\n        \n            express-session : ^1.17.2\n        \n            graphql : ^15.5.0\n        \n            graphql-tools : ^7.0.5\n        \n            joi : ^17.4.0\n        \n            mysql2 : ^2.2.5\n        \n            next : ^10.2.3\n        \n            react : ^17.0.2\n        \n            react-dom : ^17.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_ViewModule\n\n\n\ncluster_ViewModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nAppModule->MainModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nViewModule\n\nViewModule\n\nMainModule -->\n\nViewModule->MainModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nViewService\n\nViewService\n\nViewModule -->\n\nViewService->ViewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_DB_CONNECTION   (src/.../common.constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server/common/common.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_DB_CONNECTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DEFAULT_DB_CONNECTION'\n                        \n                    \n\n\n            \n        \n\n    src/server/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
